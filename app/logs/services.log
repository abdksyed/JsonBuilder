2025-08-02 15:04:17,031 - app.services.extractor - INFO - ExtractorService.extract called
2025-08-02 15:04:17,031 - app.services.extractor - INFO - Starting JSON extraction with max_retries=3
2025-08-02 15:04:17,032 - app.services.extractor - DEBUG - Input text length: 2704 characters
2025-08-02 15:04:17,032 - app.services.extractor - DEBUG - Schema: Résumé Schema
2025-08-02 15:04:17,032 - app.services.extractor - INFO - Extraction attempt 1/3
2025-08-02 15:04:17,032 - app.services.extractor - INFO - Sending request to Gemini (attempt 1)
2025-08-02 15:04:17,032 - app.services.extractor - DEBUG - Conversation history length: 1
2025-08-02 15:04:17,032 - app.services.extractor - DEBUG - Using model: gemini-2.5-flash
2025-08-02 15:04:46,383 - app.services.extractor - INFO - Input Statistics - Input Tokens: 4811, Input Price: 0.0014433
2025-08-02 15:04:46,383 - app.services.extractor - INFO - Output Statistics - Output Tokens: 1172, Output Price: 0.00293
2025-08-02 15:04:46,383 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 15:04:46,383 - app.services.extractor - INFO - Total Statistics - Total Tokens: 10546, Total Price: 0.0043733
2025-08-02 15:04:46,383 - app.services.extractor - DEBUG - Generated text length: 4196 characters
2025-08-02 15:04:46,384 - app.services.extractor - DEBUG - LLM response: \n{\n  "$schema": "http://json.schemastore.org/resume",\n  "basics": {\n    "name": "Syed Abdul Khader",\n    "label": "Building Agents | Research Enthusiast | CV and NLP Engineer",\n    "email": "abdksyed@gmail.com",\n    "phone": "+91-7013542783"\n  },\n  "skills": [\n    {\n      "name": "Languages and Frameworks",\n      "keywords": [\n        "Python",\n        "FastAPI",\n        "PyTorch",\n        "Huggingface",\n        "Postgres"\n      ]\n    },\n    {\n      "name": "Technologies",\n      "keywords": [\n        "LLMs/VLMs",\n        "CV",\n        "NLP",\n        "RAG",\n        "LLM Agents",\n        "Prompt Optimization",\n        "Docker",\n        "Git"\n      ]\n    }\n  ],\n  "work": [\n    {\n      "name": "Amuse Labs",\n      "location": "Bangalore, India",\n      "position": "Senior AI Software Engineer",\n      "startDate": "2024-05",\n      "highlights": [\n        "Deployed PuzzleMe Agent, a multi-agent function-calling workflow that automates ideation, customization, monitoring, and logging, doubling creator throughput",\n        "Designed synthetic data generators and rubric-based evaluation sets covering varied edge cases, cutting manual QA time by 70%",\n        "Architected AI-assisted puzzle creation suite, raising user-generated content by 60% via modular LLM pipelines and fine-tuned PyTorch/Huggingface models",\n        "Migrated services to FastAPI and integrated with a TypeScript frontend, trimming latency 50% and adding observability dashboards for real-time model health"\n      ]\n    },\n    {\n      "name": "Mass General Hospital, Harvard Medical School",\n      "location": "Boston, USA",\n      "position": "Research Scholar",\n      "startDate": "2023-04",\n      "endDate": "2024-04",\n      "highlights": [\n        "Achieved SOTA surgical video segmentation (92.26% binary, 74.43% multi-class IoU) through custom vision transformers and active-learning datasets",\n        "Developed annotation platform with SAM-Med2D and XMem++ plus quality-control rubrics, reducing labeling effort 75%"\n      ]\n    },\n    {\n      "name": "Infinstor",\n      "location": "Remote",\n      "position": "Data Scientist",\n      "startDate": "2021-06",\n      "endDate": "2022-07",\n      "highlights": [\n        "Built OCR system for document processing with table detection and handwritten text recognition",\n        "Developed LayoutLM-based document understanding pipeline, cutting processing time by 90%",\n        "Implemented anomaly-detection for SQL queries and CloudWatch logs using LogBERT, crafting DSL-driven evaluation sets that reduced false positives 35%"\n      ]\n    },\n    {\n      "name": "Infor",\n      "location": "Hyderabad, India",\n      "position": "Dev Business Analyst",\n      "startDate": "2019-07",\n      "endDate": "2021-04",\n      "highlights": [\n        "Engineered ETL pipelines for CRM/ERP data migration from Microsoft CRM and Salesforce to the Infor ecosystem",\n        "Built automated reporting solutions with Infor Birst and VBA, delivering analytics dashboards for business units"\n      ]\n    }\n  ],\n  "publications": [\n    {\n      "name": "Data Efficiency for Robust Surgical Video Segmentation",\n      "releaseDate": "2025"\n    },\n    {\n      "name": "Thoracic Surgery Video Analysis for Surgical Phase Recognition",\n      "publisher": "Workshop on Robot-Assisted Medical Imaging, IEEE ICRA",\n      "releaseDate": "2024"\n    },\n    {\n      "name": "Medical Surgery Stream Segmentation to Detect and Track Robotic Tools",\n      "publisher": "IEEE Conference on AI for Medicine, Health, and Care",\n      "releaseDate": "2024"\n    },\n    {\n      "name": "Utilizing AI for Surgical Anatomy and Phase Recognition in Thoracic Surgery",\n      "publisher": "IEEE Conference on Biomedical Engineering Instrumentation",\n      "releaseDate": "2024"\n    }\n  ],\n  "education": [\n    {\n      "institution": "Plaksha University",\n      "studyType": "Technology Leaders Program",\n      "score": "9.6",\n      "courses": [\n        "NLP with Prof. Monojit Choudhury"\n      ]\n    }\n  ],\n  "awards": [\n    {\n      "title": "Best Student Committee",\n      "awarder": "Plaksha University"\n    },\n    {\n      "title": "Spirit of Plaksha",\n      "awarder": "Plaksha University"\n    }\n  ]\n}\n
2025-08-02 15:04:46,384 - app.services.extractor - DEBUG - Successfully parsed JSON: {'$schema': 'http://json.schemastore.org/resume', 'basics': {'name': 'Syed Abdul Khader', 'label': 'Building Agents | Research Enthusiast | CV and NLP Engineer', 'email': 'abdksyed@gmail.com', 'phone': '+91-7013542783'}, 'skills': [{'name': 'Languages and Frameworks', 'keywords': ['Python', 'FastAPI', 'PyTorch', 'Huggingface', 'Postgres']}, {'name': 'Technologies', 'keywords': ['LLMs/VLMs', 'CV', 'NLP', 'RAG', 'LLM Agents', 'Prompt Optimization', 'Docker', 'Git']}], 'work': [{'name': 'Amuse Labs', 'location': 'Bangalore, India', 'position': 'Senior AI Software Engineer', 'startDate': '2024-05', 'highlights': ['Deployed PuzzleMe Agent, a multi-agent function-calling workflow that automates ideation, customization, monitoring, and logging, doubling creator throughput', 'Designed synthetic data generators and rubric-based evaluation sets covering varied edge cases, cutting manual QA time by 70%', 'Architected AI-assisted puzzle creation suite, raising user-generated content by 60% via modular LLM pipelines and fine-tuned PyTorch/Huggingface models', 'Migrated services to FastAPI and integrated with a TypeScript frontend, trimming latency 50% and adding observability dashboards for real-time model health']}, {'name': 'Mass General Hospital, Harvard Medical School', 'location': 'Boston, USA', 'position': 'Research Scholar', 'startDate': '2023-04', 'endDate': '2024-04', 'highlights': ['Achieved SOTA surgical video segmentation (92.26% binary, 74.43% multi-class IoU) through custom vision transformers and active-learning datasets', 'Developed annotation platform with SAM-Med2D and XMem++ plus quality-control rubrics, reducing labeling effort 75%']}, {'name': 'Infinstor', 'location': 'Remote', 'position': 'Data Scientist', 'startDate': '2021-06', 'endDate': '2022-07', 'highlights': ['Built OCR system for document processing with table detection and handwritten text recognition', 'Developed LayoutLM-based document understanding pipeline, cutting processing time by 90%', 'Implemented anomaly-detection for SQL queries and CloudWatch logs using LogBERT, crafting DSL-driven evaluation sets that reduced false positives 35%']}, {'name': 'Infor', 'location': 'Hyderabad, India', 'position': 'Dev Business Analyst', 'startDate': '2019-07', 'endDate': '2021-04', 'highlights': ['Engineered ETL pipelines for CRM/ERP data migration from Microsoft CRM and Salesforce to the Infor ecosystem', 'Built automated reporting solutions with Infor Birst and VBA, delivering analytics dashboards for business units']}], 'publications': [{'name': 'Data Efficiency for Robust Surgical Video Segmentation', 'releaseDate': '2025'}, {'name': 'Thoracic Surgery Video Analysis for Surgical Phase Recognition', 'publisher': 'Workshop on Robot-Assisted Medical Imaging, IEEE ICRA', 'releaseDate': '2024'}, {'name': 'Medical Surgery Stream Segmentation to Detect and Track Robotic Tools', 'publisher': 'IEEE Conference on AI for Medicine, Health, and Care', 'releaseDate': '2024'}, {'name': 'Utilizing AI for Surgical Anatomy and Phase Recognition in Thoracic Surgery', 'publisher': 'IEEE Conference on Biomedical Engineering Instrumentation', 'releaseDate': '2024'}], 'education': [{'institution': 'Plaksha University', 'studyType': 'Technology Leaders Program', 'score': '9.6', 'courses': ['NLP with Prof. Monojit Choudhury']}], 'awards': [{'title': 'Best Student Committee', 'awarder': 'Plaksha University'}, {'title': 'Spirit of Plaksha', 'awarder': 'Plaksha University'}]}
2025-08-02 15:04:46,395 - app.services.extractor - INFO - Successfully extracted and validated JSON on attempt 1
2025-08-02 15:04:46,395 - app.services.extractor - INFO - Extraction completed: valid=True, attempts=1
2025-08-02 15:46:00,338 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 15:46:01,057 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 15:46:50,966 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 15:46:51,592 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 15:46:51,664 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 15:47:10,839 - services.extractor - INFO - Initializing ExtractorService
2025-08-02 15:47:11,181 - services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 15:47:11,216 - services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 15:47:11,217 - services.extractor - INFO - Auto-detecting schema for text with 2 available schemas
2025-08-02 15:47:11,217 - services.extractor - DEBUG - Sending schema selection request to LLM
2025-08-02 15:47:13,580 - services.extractor - INFO - Selected schema: resume-schema
2025-08-02 15:47:13,580 - services.extractor - INFO - Generating schema metadata
2025-08-02 15:47:19,474 - services.extractor - INFO - Generated metadata - Title: User Profile, Slug: user-profile
2025-08-02 16:27:59,635 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 16:28:00,096 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 16:28:00,165 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 16:28:13,803 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 16:28:14,150 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 16:28:14,221 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 16:36:51,629 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 16:36:51,921 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 16:36:51,954 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 16:37:27,785 - app.services.extractor - INFO - Starting auto-extraction process
2025-08-02 16:37:27,786 - app.services.extractor - INFO - Auto-detecting schema for text with 5 available schemas
2025-08-02 16:37:27,786 - app.services.extractor - DEBUG - Sending schema selection request to LLM
2025-08-02 16:37:31,426 - app.services.extractor - INFO - Selected schema: resume-schema
2025-08-02 16:37:31,426 - app.services.extractor - INFO - Starting JSON extraction with max_retries=3
2025-08-02 16:37:31,426 - app.services.extractor - DEBUG - Input text length: 473 characters
2025-08-02 16:37:31,426 - app.services.extractor - DEBUG - Schema: Résumé Schema
2025-08-02 16:37:31,426 - app.services.extractor - INFO - Extraction attempt 1/3
2025-08-02 16:37:31,426 - app.services.extractor - INFO - Sending request to Gemini (attempt 1)
2025-08-02 16:37:31,426 - app.services.extractor - DEBUG - Conversation history length: 1
2025-08-02 16:37:31,426 - app.services.extractor - DEBUG - Using model: gemini-2.5-flash
2025-08-02 16:37:42,324 - app.services.extractor - INFO - Input Statistics - Input Tokens: 4298, Input Price: 0.0012893999999999998
2025-08-02 16:37:42,324 - app.services.extractor - INFO - Output Statistics - Output Tokens: 395, Output Price: 0.0009875
2025-08-02 16:37:42,324 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 16:37:42,325 - app.services.extractor - INFO - Total Statistics - Total Tokens: 6485, Total Price: 0.0022769
2025-08-02 16:37:42,327 - app.services.extractor - DEBUG - Generated text length: 1138 characters
2025-08-02 16:37:42,327 - app.services.extractor - DEBUG - LLM response: \n{\n  "basics": {\n    "name": "John Smith",\n    "label": "Software Engineer",\n    "email": "john.smith@example.com",\n    "phone": "(555) 123-4567"\n  },\n  "work": [\n    {\n      "name": "TechCorp",\n      "position": "Senior Software Engineer",\n      "startDate": "2020",\n      "endDate": "2023",\n      "highlights": [\n        "Led development of microservices architecture",\n        "Managed team of 5 developers"\n      ]\n    },\n    {\n      "name": "StartupInc",\n      "position": "Software Developer",\n      "startDate": "2018",\n      "endDate": "2020",\n      "highlights": [\n        "Built React applications and REST APIs"\n      ]\n    }\n  ],\n  "education": [\n    {\n      "institution": "Stanford University",\n      "area": "Computer Science",\n      "studyType": "MS",\n      "endDate": "2018"\n    },\n    {\n      "institution": "UC Berkeley",\n      "area": "Software Engineering",\n      "studyType": "BS",\n      "endDate": "2016"\n    }\n  ],\n  "skills": [\n    {\n      "name": "Python"\n    },\n    {\n      "name": "JavaScript"\n    },\n    {\n      "name": "React"\n    },\n    {\n      "name": "Docker"\n    },\n    {\n      "name": "AWS"\n    }\n  ]\n}\n
2025-08-02 16:37:42,327 - app.services.extractor - DEBUG - Successfully parsed JSON: {'basics': {'name': 'John Smith', 'label': 'Software Engineer', 'email': 'john.smith@example.com', 'phone': '(555) 123-4567'}, 'work': [{'name': 'TechCorp', 'position': 'Senior Software Engineer', 'startDate': '2020', 'endDate': '2023', 'highlights': ['Led development of microservices architecture', 'Managed team of 5 developers']}, {'name': 'StartupInc', 'position': 'Software Developer', 'startDate': '2018', 'endDate': '2020', 'highlights': ['Built React applications and REST APIs']}], 'education': [{'institution': 'Stanford University', 'area': 'Computer Science', 'studyType': 'MS', 'endDate': '2018'}, {'institution': 'UC Berkeley', 'area': 'Software Engineering', 'studyType': 'BS', 'endDate': '2016'}], 'skills': [{'name': 'Python'}, {'name': 'JavaScript'}, {'name': 'React'}, {'name': 'Docker'}, {'name': 'AWS'}]}
2025-08-02 16:37:42,330 - app.services.extractor - INFO - Successfully extracted and validated JSON on attempt 1
2025-08-02 16:37:42,330 - app.services.extractor - INFO - Auto-extraction completed: schema=resume-schema, valid=True
2025-08-02 16:54:06,065 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 16:54:06,462 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 16:54:06,509 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 16:54:14,194 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 16:54:14,662 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 16:54:14,733 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 16:54:27,975 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 16:54:28,306 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 16:54:28,356 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 16:54:59,053 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 16:54:59,388 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 16:54:59,450 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 16:55:15,458 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 16:55:15,910 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 16:55:15,967 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 16:55:21,902 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 16:55:22,259 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 16:55:22,316 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 16:55:37,110 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 16:55:37,465 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 16:55:37,515 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 16:58:14,196 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 16:58:14,586 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 16:58:14,644 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 16:58:21,974 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 16:58:22,301 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 16:58:22,381 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 16:58:32,874 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 16:58:33,204 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 16:58:33,308 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 16:58:48,584 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 16:58:48,870 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 16:58:48,913 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 16:58:53,823 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 16:58:54,225 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 16:58:54,300 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 16:59:02,583 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 16:59:02,988 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 16:59:03,059 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 16:59:08,837 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 16:59:09,240 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 16:59:09,313 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 17:05:41,709 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 17:05:41,982 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 17:05:42,015 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 17:08:48,298 - app.services.extractor - INFO - Auto-detecting schema for text with 5 available schemas
2025-08-02 17:08:48,299 - app.services.extractor - DEBUG - Sending schema selection request to LLM
2025-08-02 17:08:53,952 - app.services.extractor - INFO - Selected schema: resume-schema
2025-08-02 17:09:02,778 - app.services.extractor - INFO - ExtractorService.extract called
2025-08-02 17:09:02,778 - app.services.extractor - INFO - Starting JSON extraction with max_retries=3
2025-08-02 17:09:02,778 - app.services.extractor - DEBUG - Input text length: 420 characters
2025-08-02 17:09:02,778 - app.services.extractor - DEBUG - Schema: Résumé Schema
2025-08-02 17:09:02,778 - app.services.extractor - INFO - Extraction attempt 1/3
2025-08-02 17:09:02,778 - app.services.extractor - ERROR - Unexpected error on attempt 1: Extraction failed: Object of type SchemaMeta is not JSON serializable
2025-08-02 17:09:02,778 - app.services.extractor - INFO - Extraction attempt 2/3
2025-08-02 17:09:02,778 - app.services.extractor - ERROR - Unexpected error on attempt 2: Extraction failed: Object of type SchemaMeta is not JSON serializable
2025-08-02 17:09:02,778 - app.services.extractor - INFO - Extraction attempt 3/3
2025-08-02 17:09:02,778 - app.services.extractor - ERROR - Unexpected error on attempt 3: Extraction failed: Object of type SchemaMeta is not JSON serializable
2025-08-02 17:09:02,778 - app.services.extractor - ERROR - Extraction failed after 3 attempts
2025-08-02 17:09:02,778 - app.services.extractor - INFO - Extraction completed: valid=False, attempts=3
2025-08-02 17:09:16,712 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 17:09:17,086 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 17:09:17,152 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 17:09:24,569 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 17:09:25,030 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 17:09:25,088 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 17:09:31,828 - app.services.extractor - INFO - Auto-detecting schema for text with 5 available schemas
2025-08-02 17:09:31,828 - app.services.extractor - DEBUG - Sending schema selection request to LLM
2025-08-02 17:09:35,110 - app.services.extractor - INFO - Selected schema: resume-schema
2025-08-02 17:09:43,311 - app.services.extractor - INFO - ExtractorService.extract called
2025-08-02 17:09:43,311 - app.services.extractor - INFO - Starting JSON extraction with max_retries=3
2025-08-02 17:09:43,311 - app.services.extractor - DEBUG - Input text length: 420 characters
2025-08-02 17:09:43,311 - app.services.extractor - DEBUG - Schema: Résumé Schema
2025-08-02 17:09:43,311 - app.services.extractor - INFO - Extraction attempt 1/3
2025-08-02 17:09:43,311 - app.services.extractor - INFO - Sending request to Gemini (attempt 1)
2025-08-02 17:09:43,311 - app.services.extractor - DEBUG - Conversation history length: 1
2025-08-02 17:09:43,311 - app.services.extractor - DEBUG - Using model: gemini-2.5-pro
2025-08-02 17:10:01,754 - app.services.extractor - INFO - Input Statistics - Input Tokens: 4267, Input Price: 0.0106675
2025-08-02 17:10:01,754 - app.services.extractor - INFO - Output Statistics - Output Tokens: 299, Output Price: 0.00299
2025-08-02 17:10:01,754 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 17:10:01,754 - app.services.extractor - INFO - Total Statistics - Total Tokens: 5915, Total Price: 0.0136575
2025-08-02 17:10:01,754 - app.services.extractor - DEBUG - Generated text length: 893 characters
2025-08-02 17:10:01,754 - app.services.extractor - DEBUG - LLM response: \n{\n  "basics": {\n    "name": "John Smith",\n    "label": "Software Engineer",\n    "email": "john.smith@example.com",\n    "phone": "(555) 123-4567"\n  },\n  "work": [\n    {\n      "name": "TechCorp",\n      "position": "Software Engineer",\n      "startDate": "2020",\n      "highlights": [\n        "led development of microservices architecture",\n        "managed a team of 5 developers"\n      ]\n    }\n  ],\n  "education": [\n    {\n      "institution": "Stanford University",\n      "area": "Computer Science",\n      "studyType": "Master",\n      "endDate": "2018"\n    },\n    {\n      "institution": "UC Berkeley",\n      "area": "Software Engineering",\n      "studyType": "Bachelor",\n      "endDate": "2016"\n    }\n  ],\n  "skills": [\n    {\n      "name": "Programming & Cloud",\n      "keywords": [\n        "Python",\n        "JavaScript",\n        "React",\n        "Docker",\n        "AWS"\n      ]\n    }\n  ]\n}\n
2025-08-02 17:10:01,754 - app.services.extractor - DEBUG - Successfully parsed JSON: {'basics': {'name': 'John Smith', 'label': 'Software Engineer', 'email': 'john.smith@example.com', 'phone': '(555) 123-4567'}, 'work': [{'name': 'TechCorp', 'position': 'Software Engineer', 'startDate': '2020', 'highlights': ['led development of microservices architecture', 'managed a team of 5 developers']}], 'education': [{'institution': 'Stanford University', 'area': 'Computer Science', 'studyType': 'Master', 'endDate': '2018'}, {'institution': 'UC Berkeley', 'area': 'Software Engineering', 'studyType': 'Bachelor', 'endDate': '2016'}], 'skills': [{'name': 'Programming & Cloud', 'keywords': ['Python', 'JavaScript', 'React', 'Docker', 'AWS']}]}
2025-08-02 17:10:01,762 - app.services.extractor - INFO - Successfully extracted and validated JSON on attempt 1
2025-08-02 17:10:01,762 - app.services.extractor - INFO - Extraction completed: valid=True, attempts=1
2025-08-02 17:11:10,711 - app.services.extractor - INFO - ExtractorService.extract called
2025-08-02 17:11:10,712 - app.services.extractor - INFO - Starting JSON extraction with max_retries=3
2025-08-02 17:11:10,712 - app.services.extractor - DEBUG - Input text length: 147 characters
2025-08-02 17:11:10,712 - app.services.extractor - DEBUG - Schema: Product Information
2025-08-02 17:11:10,713 - app.services.extractor - INFO - Extraction attempt 1/3
2025-08-02 17:11:10,713 - app.services.extractor - INFO - Sending request to Gemini (attempt 1)
2025-08-02 17:11:10,713 - app.services.extractor - DEBUG - Conversation history length: 1
2025-08-02 17:11:10,713 - app.services.extractor - DEBUG - Using model: gemini-2.5-pro
2025-08-02 17:11:19,351 - app.services.extractor - INFO - Input Statistics - Input Tokens: 268, Input Price: 0.00067
2025-08-02 17:11:19,351 - app.services.extractor - INFO - Output Statistics - Output Tokens: 55, Output Price: 0.00055
2025-08-02 17:11:19,351 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 17:11:19,352 - app.services.extractor - INFO - Total Statistics - Total Tokens: 907, Total Price: 0.0012200000000000002
2025-08-02 17:11:19,352 - app.services.extractor - DEBUG - Generated text length: 171 characters
2025-08-02 17:11:19,352 - app.services.extractor - DEBUG - LLM response: \n{\n  "name": "iPhone 15 Pro",\n  "price": 999,\n  "description": "Latest flagship smartphone with titanium design and advanced camera system",\n  "category": "Electronics"\n}\n
2025-08-02 17:11:19,352 - app.services.extractor - DEBUG - Successfully parsed JSON: {'name': 'iPhone 15 Pro', 'price': 999, 'description': 'Latest flagship smartphone with titanium design and advanced camera system', 'category': 'Electronics'}
2025-08-02 17:11:19,354 - app.services.extractor - INFO - Successfully extracted and validated JSON on attempt 1
2025-08-02 17:11:19,354 - app.services.extractor - INFO - Extraction completed: valid=True, attempts=1
2025-08-02 17:13:00,988 - app.services.extractor - INFO - Starting auto-extraction process
2025-08-02 17:13:00,989 - app.services.extractor - INFO - Auto-detecting schema for text with 5 available schemas
2025-08-02 17:13:00,989 - app.services.extractor - DEBUG - Sending schema selection request to LLM
2025-08-02 17:13:06,962 - app.services.extractor - INFO - Selected schema: resume-schema
2025-08-02 17:13:06,962 - app.services.extractor - INFO - Starting JSON extraction with max_retries=3
2025-08-02 17:13:06,962 - app.services.extractor - DEBUG - Input text length: 2704 characters
2025-08-02 17:13:06,962 - app.services.extractor - DEBUG - Schema: Résumé Schema
2025-08-02 17:13:06,962 - app.services.extractor - INFO - Extraction attempt 1/3
2025-08-02 17:13:06,963 - app.services.extractor - INFO - Sending request to Gemini (attempt 1)
2025-08-02 17:13:06,963 - app.services.extractor - DEBUG - Conversation history length: 1
2025-08-02 17:13:06,963 - app.services.extractor - DEBUG - Using model: gemini-2.5-pro
2025-08-02 17:13:36,454 - app.services.extractor - INFO - Input Statistics - Input Tokens: 4811, Input Price: 0.0120275
2025-08-02 17:13:36,455 - app.services.extractor - INFO - Output Statistics - Output Tokens: 1212, Output Price: 0.01212
2025-08-02 17:13:36,455 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 17:13:36,455 - app.services.extractor - INFO - Total Statistics - Total Tokens: 8101, Total Price: 0.024147500000000002
2025-08-02 17:13:36,455 - app.services.extractor - DEBUG - Generated text length: 4342 characters
2025-08-02 17:13:36,455 - app.services.extractor - DEBUG - LLM response: \n{\n  "basics": {\n    "name": "Syed Abdul Khader",\n    "label": "Building Agents | Research Enthusiast | CV and NLP Engineer",\n    "email": "abdksyed@gmail.com",\n    "phone": "+91-7013542783"\n  },\n  "work": [\n    {\n      "name": "Amuse Labs",\n      "location": "Bangalore, India",\n      "position": "Senior AI Software Engineer",\n      "startDate": "2024-05",\n      "highlights": [\n        "Deployed PuzzleMe Agent, a multi-agent function-calling workflow that automates ideation, customization, monitoring, and logging, doubling creator throughput",\n        "Designed synthetic data generators and rubric-based evaluation sets covering varied edge cases, cutting manual QA time by 70%",\n        "Architected AI-assisted puzzle creation suite, raising user-generated content by 60% via modular LLM pipelines and fine-tuned PyTorch/Huggingface models",\n        "Migrated services to FastAPI and integrated with a TypeScript frontend, trimming latency 50% and adding observability dashboards for real-time model health"\n      ]\n    },\n    {\n      "name": "Mass General Hospital, Harvard Medical School",\n      "location": "Boston, USA",\n      "position": "Research Scholar",\n      "startDate": "2023-04",\n      "endDate": "2024-04",\n      "highlights": [\n        "Achieved SOTA surgical video segmentation (92.26% binary, 74.43% multi-class IoU) through custom vision transformers and active-learning datasets",\n        "Developed annotation platform with SAM-Med2D and XMem++ plus quality-control rubrics, reducing labeling effort 75%"\n      ]\n    },\n    {\n      "name": "Infinstor",\n      "location": "Remote",\n      "position": "Data Scientist",\n      "startDate": "2021-06",\n      "endDate": "2022-07",\n      "highlights": [\n        "Built OCR system for document processing with table detection and handwritten text recognition",\n        "Developed LayoutLM-based document understanding pipeline, cutting processing time by 90%",\n        "Implemented anomaly-detection for SQL queries and CloudWatch logs using LogBERT, crafting DSL-driven evaluation sets that reduced false positives 35%"\n      ]\n    },\n    {\n      "name": "Infor",\n      "location": "Hyderabad, India",\n      "position": "Dev Business Analyst",\n      "startDate": "2019-07",\n      "endDate": "2021-04",\n      "highlights": [\n        "Engineered ETL pipelines for CRM/ERP data migration from Microsoft CRM and Salesforce to the Infor ecosystem",\n        "Built automated reporting solutions with Infor Birst and VBA, delivering analytics dashboards for business units"\n      ]\n    }\n  ],\n  "volunteer": [\n    {\n      "organization": "Plaksha University",\n      "position": "Teaching Assistant – NLP with Prof. Monojit Choudhury"\n    }\n  ],\n  "education": [\n    {\n      "institution": "Plaksha University",\n      "studyType": "Technology Leaders Program",\n      "score": "9.6"\n    }\n  ],\n  "awards": [\n    {\n      "title": "Gold Medalist",\n      "awarder": "Plaksha University"\n    },\n    {\n      "title": "Best Student Committee",\n      "awarder": "Plaksha University"\n    },\n    {\n      "title": "Spirit of Plaksha",\n      "awarder": "Plaksha University"\n    }\n  ],\n  "publications": [\n    {\n      "name": "Data Efficiency for Robust Surgical Video Segmentation",\n      "releaseDate": "2025",\n      "summary": "Under Review"\n    },\n    {\n      "name": "Thoracic Surgery Video Analysis for Surgical Phase Recognition",\n      "publisher": "Workshop on Robot-Assisted Medical Imaging, IEEE ICRA",\n      "releaseDate": "2024"\n    },\n    {\n      "name": "Medical Surgery Stream Segmentation to Detect and Track Robotic Tools",\n      "publisher": "IEEE Conference on AI for Medicine, Health, and Care",\n      "releaseDate": "2024"\n    },\n    {\n      "name": "Utilizing AI for Surgical Anatomy and Phase Recognition in Thoracic Surgery",\n      "publisher": "IEEE Conference on Biomedical Engineering Instrumentation",\n      "releaseDate": "2024"\n    }\n  ],\n  "skills": [\n    {\n      "name": "Languages and Frameworks",\n      "keywords": [\n        "Python",\n        "FastAPI",\n        "PyTorch",\n        "Huggingface",\n        "Postgres"\n      ]\n    },\n    {\n      "name": "Technologies",\n      "keywords": [\n        "LLMs/VLMs",\n        "CV",\n        "NLP",\n        "RAG",\n        "LLM Agents",\n        "Prompt Optimization",\n        "Docker",\n        "Git"\n      ]\n    }\n  ]\n}\n
2025-08-02 17:13:36,455 - app.services.extractor - DEBUG - Successfully parsed JSON: {'basics': {'name': 'Syed Abdul Khader', 'label': 'Building Agents | Research Enthusiast | CV and NLP Engineer', 'email': 'abdksyed@gmail.com', 'phone': '+91-7013542783'}, 'work': [{'name': 'Amuse Labs', 'location': 'Bangalore, India', 'position': 'Senior AI Software Engineer', 'startDate': '2024-05', 'highlights': ['Deployed PuzzleMe Agent, a multi-agent function-calling workflow that automates ideation, customization, monitoring, and logging, doubling creator throughput', 'Designed synthetic data generators and rubric-based evaluation sets covering varied edge cases, cutting manual QA time by 70%', 'Architected AI-assisted puzzle creation suite, raising user-generated content by 60% via modular LLM pipelines and fine-tuned PyTorch/Huggingface models', 'Migrated services to FastAPI and integrated with a TypeScript frontend, trimming latency 50% and adding observability dashboards for real-time model health']}, {'name': 'Mass General Hospital, Harvard Medical School', 'location': 'Boston, USA', 'position': 'Research Scholar', 'startDate': '2023-04', 'endDate': '2024-04', 'highlights': ['Achieved SOTA surgical video segmentation (92.26% binary, 74.43% multi-class IoU) through custom vision transformers and active-learning datasets', 'Developed annotation platform with SAM-Med2D and XMem++ plus quality-control rubrics, reducing labeling effort 75%']}, {'name': 'Infinstor', 'location': 'Remote', 'position': 'Data Scientist', 'startDate': '2021-06', 'endDate': '2022-07', 'highlights': ['Built OCR system for document processing with table detection and handwritten text recognition', 'Developed LayoutLM-based document understanding pipeline, cutting processing time by 90%', 'Implemented anomaly-detection for SQL queries and CloudWatch logs using LogBERT, crafting DSL-driven evaluation sets that reduced false positives 35%']}, {'name': 'Infor', 'location': 'Hyderabad, India', 'position': 'Dev Business Analyst', 'startDate': '2019-07', 'endDate': '2021-04', 'highlights': ['Engineered ETL pipelines for CRM/ERP data migration from Microsoft CRM and Salesforce to the Infor ecosystem', 'Built automated reporting solutions with Infor Birst and VBA, delivering analytics dashboards for business units']}], 'volunteer': [{'organization': 'Plaksha University', 'position': 'Teaching Assistant – NLP with Prof. Monojit Choudhury'}], 'education': [{'institution': 'Plaksha University', 'studyType': 'Technology Leaders Program', 'score': '9.6'}], 'awards': [{'title': 'Gold Medalist', 'awarder': 'Plaksha University'}, {'title': 'Best Student Committee', 'awarder': 'Plaksha University'}, {'title': 'Spirit of Plaksha', 'awarder': 'Plaksha University'}], 'publications': [{'name': 'Data Efficiency for Robust Surgical Video Segmentation', 'releaseDate': '2025', 'summary': 'Under Review'}, {'name': 'Thoracic Surgery Video Analysis for Surgical Phase Recognition', 'publisher': 'Workshop on Robot-Assisted Medical Imaging, IEEE ICRA', 'releaseDate': '2024'}, {'name': 'Medical Surgery Stream Segmentation to Detect and Track Robotic Tools', 'publisher': 'IEEE Conference on AI for Medicine, Health, and Care', 'releaseDate': '2024'}, {'name': 'Utilizing AI for Surgical Anatomy and Phase Recognition in Thoracic Surgery', 'publisher': 'IEEE Conference on Biomedical Engineering Instrumentation', 'releaseDate': '2024'}], 'skills': [{'name': 'Languages and Frameworks', 'keywords': ['Python', 'FastAPI', 'PyTorch', 'Huggingface', 'Postgres']}, {'name': 'Technologies', 'keywords': ['LLMs/VLMs', 'CV', 'NLP', 'RAG', 'LLM Agents', 'Prompt Optimization', 'Docker', 'Git']}]}
2025-08-02 17:13:36,463 - app.services.extractor - INFO - Successfully extracted and validated JSON on attempt 1
2025-08-02 17:13:36,463 - app.services.extractor - INFO - Auto-extraction completed: schema=resume-schema, valid=True
2025-08-02 17:31:47,412 - app.services.extractor - INFO - Auto-detecting schema for text with 5 available schemas
2025-08-02 17:31:47,415 - app.services.extractor - DEBUG - Sending schema selection request to LLM
2025-08-02 17:31:53,134 - app.services.extractor - INFO - Selected schema: resume-schema
2025-08-02 17:31:55,445 - app.services.extractor - INFO - ExtractorService.extract called
2025-08-02 17:31:55,445 - app.services.extractor - INFO - Starting JSON extraction with max_retries=3
2025-08-02 17:31:55,446 - app.services.extractor - DEBUG - Input text length: 2704 characters
2025-08-02 17:31:55,446 - app.services.extractor - DEBUG - Schema: Résumé Schema
2025-08-02 17:31:55,446 - app.services.extractor - INFO - Extraction attempt 1/3
2025-08-02 17:31:55,446 - app.services.extractor - INFO - Sending request to Gemini (attempt 1)
2025-08-02 17:31:55,446 - app.services.extractor - DEBUG - Conversation history length: 1
2025-08-02 17:31:55,446 - app.services.extractor - DEBUG - Using model: gemini-2.5-pro
2025-08-02 17:32:24,935 - app.services.extractor - INFO - Input Statistics - Input Tokens: 4811, Input Price: 0.0120275
2025-08-02 17:32:24,936 - app.services.extractor - INFO - Output Statistics - Output Tokens: 1199, Output Price: 0.01199
2025-08-02 17:32:24,936 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 17:32:24,936 - app.services.extractor - INFO - Total Statistics - Total Tokens: 7951, Total Price: 0.0240175
2025-08-02 17:32:24,936 - app.services.extractor - DEBUG - Generated text length: 4288 characters
2025-08-02 17:32:24,936 - app.services.extractor - DEBUG - LLM response: \n{\n  "basics": {\n    "name": "Syed Abdul Khader",\n    "label": "Building Agents | Research Enthusiast | CV and NLP Engineer",\n    "email": "abdksyed@gmail.com",\n    "phone": "+91-7013542783"\n  },\n  "work": [\n    {\n      "name": "Amuse Labs",\n      "location": "Bangalore, India",\n      "position": "Senior AI Software Engineer",\n      "startDate": "2024-05",\n      "highlights": [\n        "Deployed PuzzleMe Agent, a multi-agent function-calling workflow that automates ideation, customization, monitoring, and logging, doubling creator throughput",\n        "Designed synthetic data generators and rubric-based evaluation sets covering varied edge cases, cutting manual QA time by 70%",\n        "Architected AI-assisted puzzle creation suite, raising user-generated content by 60% via modular LLM pipelines and fine-tuned PyTorch/Huggingface models",\n        "Migrated services to FastAPI and integrated with a TypeScript frontend, trimming latency 50% and adding observability dashboards for real-time model health"\n      ]\n    },\n    {\n      "name": "Mass General Hospital, Harvard Medical School",\n      "location": "Boston, USA",\n      "position": "Research Scholar",\n      "startDate": "2023-04",\n      "endDate": "2024-04",\n      "highlights": [\n        "Achieved SOTA surgical video segmentation (92.26% binary, 74.43% multi-class IoU) through custom vision transformers and active-learning datasets",\n        "Developed annotation platform with SAM-Med2D and XMem++ plus quality-control rubrics, reducing labeling effort 75%"\n      ]\n    },\n    {\n      "name": "Infinstor",\n      "location": "Remote",\n      "position": "Data Scientist",\n      "startDate": "2021-06",\n      "endDate": "2022-07",\n      "highlights": [\n        "Built OCR system for document processing with table detection and handwritten text recognition",\n        "Developed LayoutLM-based document understanding pipeline, cutting processing time by 90%",\n        "Implemented anomaly-detection for SQL queries and CloudWatch logs using LogBERT, crafting DSL-driven evaluation sets that reduced false positives 35%"\n      ]\n    },\n    {\n      "name": "Infor",\n      "location": "Hyderabad, India",\n      "position": "Dev Business Analyst",\n      "startDate": "2019-07",\n      "endDate": "2021-04",\n      "highlights": [\n        "Engineered ETL pipelines for CRM/ERP data migration from Microsoft CRM and Salesforce to the Infor ecosystem",\n        "Built automated reporting solutions with Infor Birst and VBA, delivering analytics dashboards for business units"\n      ]\n    }\n  ],\n  "publications": [\n    {\n      "name": "Data Efficiency for Robust Surgical Video Segmentation",\n      "releaseDate": "2025",\n      "summary": "Under Review, 2025"\n    },\n    {\n      "name": "Thoracic Surgery Video Analysis for Surgical Phase Recognition",\n      "publisher": "Workshop on Robot-Assisted Medical Imaging, IEEE ICRA",\n      "releaseDate": "2024"\n    },\n    {\n      "name": "Medical Surgery Stream Segmentation to Detect and Track Robotic Tools",\n      "publisher": "IEEE Conference on AI for Medicine, Health, and Care",\n      "releaseDate": "2024"\n    },\n    {\n      "name": "Utilizing AI for Surgical Anatomy and Phase Recognition in Thoracic Surgery",\n      "publisher": "IEEE Conference on Biomedical Engineering Instrumentation",\n      "releaseDate": "2024"\n    }\n  ],\n  "education": [\n    {\n      "institution": "Plaksha University",\n      "studyType": "Technology Leaders Program",\n      "score": "9.6",\n      "courses": [\n        "Teaching Assistant – NLP with Prof. Monojit Choudhury"\n      ]\n    }\n  ],\n  "awards": [\n    {\n      "title": "Gold Medalist",\n      "awarder": "Plaksha University"\n    },\n    {\n      "title": "Best Student Committee",\n      "awarder": "Plaksha University"\n    },\n    {\n      "title": "Spirit of Plaksha",\n      "awarder": "Plaksha University"\n    }\n  ],\n  "skills": [\n    {\n      "name": "Languages and Frameworks",\n      "keywords": [\n        "Python",\n        "FastAPI",\n        "PyTorch",\n        "Huggingface",\n        "Postgres"\n      ]\n    },\n    {\n      "name": "Technologies",\n      "keywords": [\n        "LLMs/VLMs",\n        "CV",\n        "NLP",\n        "RAG",\n        "LLM Agents",\n        "Prompt Optimization",\n        "Docker",\n        "Git"\n      ]\n    }\n  ]\n}\n
2025-08-02 17:32:24,936 - app.services.extractor - DEBUG - Successfully parsed JSON: {'basics': {'name': 'Syed Abdul Khader', 'label': 'Building Agents | Research Enthusiast | CV and NLP Engineer', 'email': 'abdksyed@gmail.com', 'phone': '+91-7013542783'}, 'work': [{'name': 'Amuse Labs', 'location': 'Bangalore, India', 'position': 'Senior AI Software Engineer', 'startDate': '2024-05', 'highlights': ['Deployed PuzzleMe Agent, a multi-agent function-calling workflow that automates ideation, customization, monitoring, and logging, doubling creator throughput', 'Designed synthetic data generators and rubric-based evaluation sets covering varied edge cases, cutting manual QA time by 70%', 'Architected AI-assisted puzzle creation suite, raising user-generated content by 60% via modular LLM pipelines and fine-tuned PyTorch/Huggingface models', 'Migrated services to FastAPI and integrated with a TypeScript frontend, trimming latency 50% and adding observability dashboards for real-time model health']}, {'name': 'Mass General Hospital, Harvard Medical School', 'location': 'Boston, USA', 'position': 'Research Scholar', 'startDate': '2023-04', 'endDate': '2024-04', 'highlights': ['Achieved SOTA surgical video segmentation (92.26% binary, 74.43% multi-class IoU) through custom vision transformers and active-learning datasets', 'Developed annotation platform with SAM-Med2D and XMem++ plus quality-control rubrics, reducing labeling effort 75%']}, {'name': 'Infinstor', 'location': 'Remote', 'position': 'Data Scientist', 'startDate': '2021-06', 'endDate': '2022-07', 'highlights': ['Built OCR system for document processing with table detection and handwritten text recognition', 'Developed LayoutLM-based document understanding pipeline, cutting processing time by 90%', 'Implemented anomaly-detection for SQL queries and CloudWatch logs using LogBERT, crafting DSL-driven evaluation sets that reduced false positives 35%']}, {'name': 'Infor', 'location': 'Hyderabad, India', 'position': 'Dev Business Analyst', 'startDate': '2019-07', 'endDate': '2021-04', 'highlights': ['Engineered ETL pipelines for CRM/ERP data migration from Microsoft CRM and Salesforce to the Infor ecosystem', 'Built automated reporting solutions with Infor Birst and VBA, delivering analytics dashboards for business units']}], 'publications': [{'name': 'Data Efficiency for Robust Surgical Video Segmentation', 'releaseDate': '2025', 'summary': 'Under Review, 2025'}, {'name': 'Thoracic Surgery Video Analysis for Surgical Phase Recognition', 'publisher': 'Workshop on Robot-Assisted Medical Imaging, IEEE ICRA', 'releaseDate': '2024'}, {'name': 'Medical Surgery Stream Segmentation to Detect and Track Robotic Tools', 'publisher': 'IEEE Conference on AI for Medicine, Health, and Care', 'releaseDate': '2024'}, {'name': 'Utilizing AI for Surgical Anatomy and Phase Recognition in Thoracic Surgery', 'publisher': 'IEEE Conference on Biomedical Engineering Instrumentation', 'releaseDate': '2024'}], 'education': [{'institution': 'Plaksha University', 'studyType': 'Technology Leaders Program', 'score': '9.6', 'courses': ['Teaching Assistant – NLP with Prof. Monojit Choudhury']}], 'awards': [{'title': 'Gold Medalist', 'awarder': 'Plaksha University'}, {'title': 'Best Student Committee', 'awarder': 'Plaksha University'}, {'title': 'Spirit of Plaksha', 'awarder': 'Plaksha University'}], 'skills': [{'name': 'Languages and Frameworks', 'keywords': ['Python', 'FastAPI', 'PyTorch', 'Huggingface', 'Postgres']}, {'name': 'Technologies', 'keywords': ['LLMs/VLMs', 'CV', 'NLP', 'RAG', 'LLM Agents', 'Prompt Optimization', 'Docker', 'Git']}]}
2025-08-02 17:32:24,944 - app.services.extractor - INFO - Successfully extracted and validated JSON on attempt 1
2025-08-02 17:32:24,945 - app.services.extractor - INFO - Extraction completed: valid=True, attempts=1
2025-08-02 17:44:36,614 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 17:44:37,025 - app.services.extractor - ERROR - Google API key is required but not provided
2025-08-02 17:48:11,428 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 17:48:11,706 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 17:48:11,735 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 17:48:13,755 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 17:48:14,036 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 17:48:14,064 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 17:48:33,965 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 17:48:36,861 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 17:48:36,947 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 17:48:51,881 - app.services.extractor - INFO - ExtractorService.extract called
2025-08-02 17:48:51,883 - app.services.extractor - INFO - Starting JSON extraction with max_retries=3
2025-08-02 17:48:51,883 - app.services.extractor - DEBUG - Input text length: 2704 characters
2025-08-02 17:48:51,883 - app.services.extractor - DEBUG - Schema: Résumé Schema
2025-08-02 17:48:51,883 - app.services.extractor - INFO - Extraction attempt 1/3
2025-08-02 17:48:51,885 - app.services.extractor - INFO - Sending request to Gemini (attempt 1)
2025-08-02 17:48:51,885 - app.services.extractor - DEBUG - Conversation history length: 1
2025-08-02 17:48:51,885 - app.services.extractor - DEBUG - Using model: gemini-2.5-pro
2025-08-02 17:49:22,361 - app.services.extractor - INFO - Input Statistics - Input Tokens: 4811, Input Price: 0.0120275
2025-08-02 17:49:22,361 - app.services.extractor - INFO - Output Statistics - Output Tokens: 1192, Output Price: 0.01192
2025-08-02 17:49:22,361 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 17:49:22,361 - app.services.extractor - INFO - Total Statistics - Total Tokens: 7996, Total Price: 0.0239475
2025-08-02 17:49:22,362 - app.services.extractor - DEBUG - Generated text length: 4279 characters
2025-08-02 17:49:22,362 - app.services.extractor - DEBUG - LLM response: \n{\n  "basics": {\n    "name": "Syed Abdul Khader",\n    "label": "Building Agents | Research Enthusiast | CV and NLP Engineer",\n    "email": "abdksyed@gmail.com",\n    "phone": "+91-7013542783"\n  },\n  "work": [\n    {\n      "name": "Amuse Labs",\n      "location": "Bangalore, India",\n      "position": "Senior AI Software Engineer",\n      "startDate": "2024-05",\n      "highlights": [\n        "Deployed PuzzleMe Agent, a multi-agent function-calling workflow that automates ideation, customization, monitoring, and logging, doubling creator throughput",\n        "Designed synthetic data generators and rubric-based evaluation sets covering varied edge cases, cutting manual QA time by 70%",\n        "Architected AI-assisted puzzle creation suite, raising user-generated content by 60% via modular LLM pipelines and fine-tuned PyTorch/Huggingface models",\n        "Migrated services to FastAPI and integrated with a TypeScript frontend, trimming latency 50% and adding observability dashboards for real-time model health"\n      ]\n    },\n    {\n      "name": "Mass General Hospital, Harvard Medical School",\n      "location": "Boston, USA",\n      "position": "Research Scholar",\n      "startDate": "2023-04",\n      "endDate": "2024-04",\n      "highlights": [\n        "Achieved SOTA surgical video segmentation (92.26% binary, 74.43% multi-class IoU) through custom vision transformers and active-learning datasets",\n        "Developed annotation platform with SAM-Med2D and XMem++ plus quality-control rubrics, reducing labeling effort 75%"\n      ]\n    },\n    {\n      "name": "Infinstor",\n      "location": "Remote",\n      "position": "Data Scientist",\n      "startDate": "2021-06",\n      "endDate": "2022-07",\n      "highlights": [\n        "Built OCR system for document processing with table detection and handwritten text recognition",\n        "Developed LayoutLM-based document understanding pipeline, cutting processing time by 90%",\n        "Implemented anomaly-detection for SQL queries and CloudWatch logs using LogBERT, crafting DSL-driven evaluation sets that reduced false positives 35%"\n      ]\n    },\n    {\n      "name": "Infor",\n      "location": "Hyderabad, India",\n      "position": "Dev Business Analyst",\n      "startDate": "2019-07",\n      "endDate": "2021-04",\n      "highlights": [\n        "Engineered ETL pipelines for CRM/ERP data migration from Microsoft CRM and Salesforce to the Infor ecosystem",\n        "Built automated reporting solutions with Infor Birst and VBA, delivering analytics dashboards for business units"\n      ]\n    }\n  ],\n  "education": [\n    {\n      "institution": "Plaksha University",\n      "area": "Technology Leaders Program",\n      "score": "9.6",\n      "courses": [\n        "Teaching Assistant – NLP with Prof. Monojit Choudhury"\n      ]\n    }\n  ],\n  "awards": [\n    {\n      "title": "Gold Medalist",\n      "awarder": "Plaksha University"\n    },\n    {\n      "title": "Best Student Committee",\n      "awarder": "Plaksha University"\n    },\n    {\n      "title": "Spirit of Plaksha",\n      "awarder": "Plaksha University"\n    }\n  ],\n  "publications": [\n    {\n      "name": "Data Efficiency for Robust Surgical Video Segmentation",\n      "publisher": "Under Review",\n      "releaseDate": "2025"\n    },\n    {\n      "name": "Thoracic Surgery Video Analysis for Surgical Phase Recognition",\n      "publisher": "Workshop on Robot-Assisted Medical Imaging, IEEE ICRA",\n      "releaseDate": "2024"\n    },\n    {\n      "name": "Medical Surgery Stream Segmentation to Detect and Track Robotic Tools",\n      "publisher": "IEEE Conference on AI for Medicine, Health, and Care",\n      "releaseDate": "2024"\n    },\n    {\n      "name": "Utilizing AI for Surgical Anatomy and Phase Recognition in Thoracic Surgery",\n      "publisher": "IEEE Conference on Biomedical Engineering Instrumentation",\n      "releaseDate": "2024"\n    }\n  ],\n  "skills": [\n    {\n      "name": "Languages and Frameworks",\n      "keywords": [\n        "Python",\n        "FastAPI",\n        "PyTorch",\n        "Huggingface",\n        "Postgres"\n      ]\n    },\n    {\n      "name": "Technologies",\n      "keywords": [\n        "LLMs/VLMs",\n        "CV",\n        "NLP",\n        "RAG",\n        "LLM Agents",\n        "Prompt Optimization",\n        "Docker",\n        "Git"\n      ]\n    }\n  ]\n}\n
2025-08-02 17:49:22,362 - app.services.extractor - DEBUG - Successfully parsed JSON: {'basics': {'name': 'Syed Abdul Khader', 'label': 'Building Agents | Research Enthusiast | CV and NLP Engineer', 'email': 'abdksyed@gmail.com', 'phone': '+91-7013542783'}, 'work': [{'name': 'Amuse Labs', 'location': 'Bangalore, India', 'position': 'Senior AI Software Engineer', 'startDate': '2024-05', 'highlights': ['Deployed PuzzleMe Agent, a multi-agent function-calling workflow that automates ideation, customization, monitoring, and logging, doubling creator throughput', 'Designed synthetic data generators and rubric-based evaluation sets covering varied edge cases, cutting manual QA time by 70%', 'Architected AI-assisted puzzle creation suite, raising user-generated content by 60% via modular LLM pipelines and fine-tuned PyTorch/Huggingface models', 'Migrated services to FastAPI and integrated with a TypeScript frontend, trimming latency 50% and adding observability dashboards for real-time model health']}, {'name': 'Mass General Hospital, Harvard Medical School', 'location': 'Boston, USA', 'position': 'Research Scholar', 'startDate': '2023-04', 'endDate': '2024-04', 'highlights': ['Achieved SOTA surgical video segmentation (92.26% binary, 74.43% multi-class IoU) through custom vision transformers and active-learning datasets', 'Developed annotation platform with SAM-Med2D and XMem++ plus quality-control rubrics, reducing labeling effort 75%']}, {'name': 'Infinstor', 'location': 'Remote', 'position': 'Data Scientist', 'startDate': '2021-06', 'endDate': '2022-07', 'highlights': ['Built OCR system for document processing with table detection and handwritten text recognition', 'Developed LayoutLM-based document understanding pipeline, cutting processing time by 90%', 'Implemented anomaly-detection for SQL queries and CloudWatch logs using LogBERT, crafting DSL-driven evaluation sets that reduced false positives 35%']}, {'name': 'Infor', 'location': 'Hyderabad, India', 'position': 'Dev Business Analyst', 'startDate': '2019-07', 'endDate': '2021-04', 'highlights': ['Engineered ETL pipelines for CRM/ERP data migration from Microsoft CRM and Salesforce to the Infor ecosystem', 'Built automated reporting solutions with Infor Birst and VBA, delivering analytics dashboards for business units']}], 'education': [{'institution': 'Plaksha University', 'area': 'Technology Leaders Program', 'score': '9.6', 'courses': ['Teaching Assistant – NLP with Prof. Monojit Choudhury']}], 'awards': [{'title': 'Gold Medalist', 'awarder': 'Plaksha University'}, {'title': 'Best Student Committee', 'awarder': 'Plaksha University'}, {'title': 'Spirit of Plaksha', 'awarder': 'Plaksha University'}], 'publications': [{'name': 'Data Efficiency for Robust Surgical Video Segmentation', 'publisher': 'Under Review', 'releaseDate': '2025'}, {'name': 'Thoracic Surgery Video Analysis for Surgical Phase Recognition', 'publisher': 'Workshop on Robot-Assisted Medical Imaging, IEEE ICRA', 'releaseDate': '2024'}, {'name': 'Medical Surgery Stream Segmentation to Detect and Track Robotic Tools', 'publisher': 'IEEE Conference on AI for Medicine, Health, and Care', 'releaseDate': '2024'}, {'name': 'Utilizing AI for Surgical Anatomy and Phase Recognition in Thoracic Surgery', 'publisher': 'IEEE Conference on Biomedical Engineering Instrumentation', 'releaseDate': '2024'}], 'skills': [{'name': 'Languages and Frameworks', 'keywords': ['Python', 'FastAPI', 'PyTorch', 'Huggingface', 'Postgres']}, {'name': 'Technologies', 'keywords': ['LLMs/VLMs', 'CV', 'NLP', 'RAG', 'LLM Agents', 'Prompt Optimization', 'Docker', 'Git']}]}
2025-08-02 17:49:22,369 - app.services.extractor - INFO - Successfully extracted and validated JSON on attempt 1
2025-08-02 17:49:22,370 - app.services.extractor - INFO - Extraction completed: valid=True, attempts=1
2025-08-02 17:50:06,833 - app.services.extractor - INFO - ExtractorService.extract called
2025-08-02 17:50:06,834 - app.services.extractor - INFO - Starting JSON extraction with max_retries=3
2025-08-02 17:50:06,834 - app.services.extractor - DEBUG - Input text length: 2841 characters
2025-08-02 17:50:06,834 - app.services.extractor - DEBUG - Schema: Github Action
2025-08-02 17:50:06,834 - app.services.extractor - INFO - Extraction attempt 1/3
2025-08-02 17:50:06,835 - app.services.extractor - INFO - Sending request to Gemini (attempt 1)
2025-08-02 17:50:06,835 - app.services.extractor - DEBUG - Conversation history length: 1
2025-08-02 17:50:06,835 - app.services.extractor - DEBUG - Using model: gemini-2.5-pro
2025-08-02 17:50:32,195 - app.services.extractor - INFO - Input Statistics - Input Tokens: 8489, Input Price: 0.0212225
2025-08-02 17:50:32,197 - app.services.extractor - INFO - Output Statistics - Output Tokens: 514, Output Price: 0.00514
2025-08-02 17:50:32,197 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 17:50:32,197 - app.services.extractor - INFO - Total Statistics - Total Tokens: 11056, Total Price: 0.026362499999999997
2025-08-02 17:50:32,197 - app.services.extractor - DEBUG - Generated text length: 1653 characters
2025-08-02 17:50:32,197 - app.services.extractor - DEBUG - LLM response: \n{\n  "name": "MkDocs Publisher",\n  "author": "DevRel Team",\n  "description": "A simple action to build an MkDocs site and push it to the gh-pages branch.",\n  "inputs": {\n    "python-version": {\n      "description": "The version of Python to set up for building.",\n      "required": false,\n      "default": "3.11"\n    },\n    "requirements-file": {\n      "description": "Path to the Python requirements file",\n      "required": true\n    },\n    "gh-token": {\n      "description": "GitHub token for deployment.",\n      "deprecationMessage": "Prefer using GITHUB_TOKEN environment variable directly if permissions allow.",\n      "required": true\n    }\n  },\n  "outputs": {\n    "page-url": {\n      "description": "The URL of the deployed GitHub Pages site.",\n      "value": "${{ steps.deploy.outputs.page_url }}"\n    }\n  },\n  "runs": {\n    "using": "composite",\n    "steps": [\n      {\n        "uses": "actions/checkout@v4"\n      },\n      {\n        "id": "setup_python",\n        "uses": "actions/setup-python@v5",\n        "with": {\n          "python-version": "${{ inputs.python-version }}"\n        }\n      },\n      {\n        "name": "Install Python Packages",\n        "run": "pip install -r ${{ inputs.requirements-file }}",\n        "shell": "bash"\n      },\n      {\n        "run": "mkdocs build",\n        "shell": "bash"\n      },\n      {\n        "id": "deploy",\n        "uses": "peaceiris/actions-gh-pages@v3",\n        "if": "github.ref == 'refs/heads/main'",\n        "with": {\n          "github_token": "${{ inputs.gh-token }}",\n          "publish_dir": "./site"\n        }\n      }\n    ]\n  },\n  "branding": {\n    "color": "blue",\n    "icon": "book-open"\n  }\n}\n
2025-08-02 17:50:32,197 - app.services.extractor - DEBUG - Successfully parsed JSON: {'name': 'MkDocs Publisher', 'author': 'DevRel Team', 'description': 'A simple action to build an MkDocs site and push it to the gh-pages branch.', 'inputs': {'python-version': {'description': 'The version of Python to set up for building.', 'required': False, 'default': '3.11'}, 'requirements-file': {'description': 'Path to the Python requirements file', 'required': True}, 'gh-token': {'description': 'GitHub token for deployment.', 'deprecationMessage': 'Prefer using GITHUB_TOKEN environment variable directly if permissions allow.', 'required': True}}, 'outputs': {'page-url': {'description': 'The URL of the deployed GitHub Pages site.', 'value': '${{ steps.deploy.outputs.page_url }}'}}, 'runs': {'using': 'composite', 'steps': [{'uses': 'actions/checkout@v4'}, {'id': 'setup_python', 'uses': 'actions/setup-python@v5', 'with': {'python-version': '${{ inputs.python-version }}'}}, {'name': 'Install Python Packages', 'run': 'pip install -r ${{ inputs.requirements-file }}', 'shell': 'bash'}, {'run': 'mkdocs build', 'shell': 'bash'}, {'id': 'deploy', 'uses': 'peaceiris/actions-gh-pages@v3', 'if': "github.ref == 'refs/heads/main'", 'with': {'github_token': '${{ inputs.gh-token }}', 'publish_dir': './site'}}]}, 'branding': {'color': 'blue', 'icon': 'book-open'}}
2025-08-02 17:50:32,204 - app.services.extractor - INFO - Successfully extracted and validated JSON on attempt 1
2025-08-02 17:50:32,205 - app.services.extractor - INFO - Extraction completed: valid=True, attempts=1
2025-08-02 17:50:40,964 - app.services.extractor - INFO - ExtractorService.extract called
2025-08-02 17:50:40,964 - app.services.extractor - INFO - Starting JSON extraction with max_retries=3
2025-08-02 17:50:40,964 - app.services.extractor - DEBUG - Input text length: 618 characters
2025-08-02 17:50:40,964 - app.services.extractor - DEBUG - Schema: Citation File Format (CFF) v1.2.0
2025-08-02 17:50:40,964 - app.services.extractor - INFO - Extraction attempt 1/3
2025-08-02 17:50:40,965 - app.services.extractor - INFO - Sending request to Gemini (attempt 1)
2025-08-02 17:50:40,965 - app.services.extractor - DEBUG - Conversation history length: 1
2025-08-02 17:50:40,965 - app.services.extractor - DEBUG - Using model: gemini-2.5-pro
2025-08-02 17:51:23,926 - app.services.extractor - INFO - Input Statistics - Input Tokens: 15341, Input Price: 0.0383525
2025-08-02 17:51:23,927 - app.services.extractor - INFO - Output Statistics - Output Tokens: 883, Output Price: 0.00883
2025-08-02 17:51:23,927 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 17:51:23,927 - app.services.extractor - INFO - Total Statistics - Total Tokens: 20077, Total Price: 0.047182499999999995
2025-08-02 17:51:23,927 - app.services.extractor - DEBUG - Generated text length: 2459 characters
2025-08-02 17:51:23,927 - app.services.extractor - DEBUG - LLM response: \n{\n  "cff-version": "1.2.0",\n  "message": "If you use this software, please cite it using the metadata from this file.",\n  "title": "Attention is All you Need",\n  "authors": [\n    {\n      "family-names": "Vaswani",\n      "given-names": "Ashish"\n    },\n    {\n      "family-names": "Shazeer",\n      "given-names": "Noam"\n    },\n    {\n      "family-names": "Parmar",\n      "given-names": "Niki"\n    },\n    {\n      "family-names": "Uszkoreit",\n      "given-names": "Jakob"\n    },\n    {\n      "family-names": "Jones",\n      "given-names": "Llion"\n    },\n    {\n      "family-names": "Gomez",\n      "given-names": "Aidan N"\n    },\n    {\n      "family-names": "Kaiser",\n      "given-names": "Łukasz"\n    },\n    {\n      "family-names": "Polosukhin",\n      "given-names": "Illia"\n    }\n  ],\n  "preferred-citation": {\n    "type": "conference-paper",\n    "authors": [\n      {\n        "family-names": "Vaswani",\n        "given-names": "Ashish"\n      },\n      {\n        "family-names": "Shazeer",\n        "given-names": "Noam"\n      },\n      {\n        "family-names": "Parmar",\n        "given-names": "Niki"\n      },\n      {\n        "family-names": "Uszkoreit",\n        "given-names": "Jakob"\n      },\n      {\n        "family-names": "Jones",\n        "given-names": "Llion"\n      },\n      {\n        "family-names": "Gomez",\n        "given-names": "Aidan N"\n      },\n      {\n        "family-names": "Kaiser",\n        "given-names": "Łukasz"\n      },\n      {\n        "family-names": "Polosukhin",\n        "given-names": "Illia"\n      }\n    ],\n    "collection-title": "Advances in Neural Information Processing Systems",\n    "editors": [\n      {\n        "family-names": "Guyon",\n        "given-names": "I."\n      },\n      {\n        "family-names": "Von Luxburg",\n        "given-names": "U."\n      },\n      {\n        "family-names": "Bengio",\n        "given-names": "S."\n      },\n      {\n        "family-names": "Wallach",\n        "given-names": "H."\n      },\n      {\n        "family-names": "Fergus",\n        "given-names": "R."\n      },\n      {\n        "family-names": "Vishwanathan",\n        "given-names": "S."\n      },\n      {\n        "family-names": "Garnett",\n        "given-names": "R."\n      }\n    ],\n    "publisher": {\n      "name": "Curran Associates, Inc."\n    },\n    "title": "Attention is All you Need",\n    "url": "https://proceedings.neurips.cc/paper_files/paper/2017/file/3f5ee243547dee91fbd053c1c4a845aa-Paper.pdf",\n    "volume": "30",\n    "year": 2017\n  }\n}\n
2025-08-02 17:51:23,928 - app.services.extractor - DEBUG - Successfully parsed JSON: {'cff-version': '1.2.0', 'message': 'If you use this software, please cite it using the metadata from this file.', 'title': 'Attention is All you Need', 'authors': [{'family-names': 'Vaswani', 'given-names': 'Ashish'}, {'family-names': 'Shazeer', 'given-names': 'Noam'}, {'family-names': 'Parmar', 'given-names': 'Niki'}, {'family-names': 'Uszkoreit', 'given-names': 'Jakob'}, {'family-names': 'Jones', 'given-names': 'Llion'}, {'family-names': 'Gomez', 'given-names': 'Aidan N'}, {'family-names': 'Kaiser', 'given-names': 'Łukasz'}, {'family-names': 'Polosukhin', 'given-names': 'Illia'}], 'preferred-citation': {'type': 'conference-paper', 'authors': [{'family-names': 'Vaswani', 'given-names': 'Ashish'}, {'family-names': 'Shazeer', 'given-names': 'Noam'}, {'family-names': 'Parmar', 'given-names': 'Niki'}, {'family-names': 'Uszkoreit', 'given-names': 'Jakob'}, {'family-names': 'Jones', 'given-names': 'Llion'}, {'family-names': 'Gomez', 'given-names': 'Aidan N'}, {'family-names': 'Kaiser', 'given-names': 'Łukasz'}, {'family-names': 'Polosukhin', 'given-names': 'Illia'}], 'collection-title': 'Advances in Neural Information Processing Systems', 'editors': [{'family-names': 'Guyon', 'given-names': 'I.'}, {'family-names': 'Von Luxburg', 'given-names': 'U.'}, {'family-names': 'Bengio', 'given-names': 'S.'}, {'family-names': 'Wallach', 'given-names': 'H.'}, {'family-names': 'Fergus', 'given-names': 'R.'}, {'family-names': 'Vishwanathan', 'given-names': 'S.'}, {'family-names': 'Garnett', 'given-names': 'R.'}], 'publisher': {'name': 'Curran Associates, Inc.'}, 'title': 'Attention is All you Need', 'url': 'https://proceedings.neurips.cc/paper_files/paper/2017/file/3f5ee243547dee91fbd053c1c4a845aa-Paper.pdf', 'volume': '30', 'year': 2017}}
2025-08-02 17:51:23,950 - app.services.extractor - INFO - Successfully extracted and validated JSON on attempt 1
2025-08-02 17:51:23,950 - app.services.extractor - INFO - Extraction completed: valid=True, attempts=1
2025-08-02 17:51:36,217 - app.services.extractor - INFO - Auto-detecting schema for text with 5 available schemas
2025-08-02 17:51:36,218 - app.services.extractor - DEBUG - Sending schema selection request to LLM
2025-08-02 17:51:40,649 - app.services.extractor - INFO - Input Statistics - Input Tokens: 675, Input Price: 0.0002025
2025-08-02 17:51:40,650 - app.services.extractor - INFO - Output Statistics - Output Tokens: 3, Output Price: 7.5e-06
2025-08-02 17:51:40,650 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 17:51:40,650 - app.services.extractor - INFO - Total Statistics - Total Tokens: 1256, Total Price: 0.00020999999999999998
2025-08-02 17:51:40,650 - app.services.extractor - INFO - Selected schema: citation-file
2025-08-02 17:51:52,398 - app.services.extractor - INFO - ExtractorService.extract called
2025-08-02 17:51:52,399 - app.services.extractor - INFO - Starting JSON extraction with max_retries=3
2025-08-02 17:51:52,399 - app.services.extractor - DEBUG - Input text length: 618 characters
2025-08-02 17:51:52,399 - app.services.extractor - DEBUG - Schema: Citation File Format (CFF) v1.2.0
2025-08-02 17:51:52,399 - app.services.extractor - INFO - Extraction attempt 1/3
2025-08-02 17:51:52,400 - app.services.extractor - INFO - Sending request to Gemini (attempt 1)
2025-08-02 17:51:52,400 - app.services.extractor - DEBUG - Conversation history length: 1
2025-08-02 17:51:52,400 - app.services.extractor - DEBUG - Using model: gemini-2.5-pro
2025-08-02 17:52:45,032 - app.services.extractor - INFO - Input Statistics - Input Tokens: 15341, Input Price: 0.0383525
2025-08-02 17:52:45,033 - app.services.extractor - INFO - Output Statistics - Output Tokens: 881, Output Price: 0.00881
2025-08-02 17:52:45,033 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 17:52:45,033 - app.services.extractor - INFO - Total Statistics - Total Tokens: 20625, Total Price: 0.047162499999999996
2025-08-02 17:52:45,033 - app.services.extractor - DEBUG - Generated text length: 2453 characters
2025-08-02 17:52:45,033 - app.services.extractor - DEBUG - LLM response: \n{\n  "cff-version": "1.2.0",\n  "message": "Please cite this software using the metadata from 'preferred-citation'.",\n  "title": "Attention is All you Need",\n  "authors": [\n    {\n      "given-names": "Ashish",\n      "family-names": "Vaswani"\n    },\n    {\n      "given-names": "Noam",\n      "family-names": "Shazeer"\n    },\n    {\n      "given-names": "Niki",\n      "family-names": "Parmar"\n    },\n    {\n      "given-names": "Jakob",\n      "family-names": "Uszkoreit"\n    },\n    {\n      "given-names": "Llion",\n      "family-names": "Jones"\n    },\n    {\n      "given-names": "Aidan N",\n      "family-names": "Gomez"\n    },\n    {\n      "given-names": "Łukasz",\n      "family-names": "Kaiser"\n    },\n    {\n      "given-names": "Illia",\n      "family-names": "Polosukhin"\n    }\n  ],\n  "preferred-citation": {\n    "type": "conference-paper",\n    "authors": [\n      {\n        "given-names": "Ashish",\n        "family-names": "Vaswani"\n      },\n      {\n        "given-names": "Noam",\n        "family-names": "Shazeer"\n      },\n      {\n        "given-names": "Niki",\n        "family-names": "Parmar"\n      },\n      {\n        "given-names": "Jakob",\n        "family-names": "Uszkoreit"\n      },\n      {\n        "given-names": "Llion",\n        "family-names": "Jones"\n      },\n      {\n        "given-names": "Aidan N",\n        "family-names": "Gomez"\n      },\n      {\n        "given-names": "Łukasz",\n        "family-names": "Kaiser"\n      },\n      {\n        "given-names": "Illia",\n        "family-names": "Polosukhin"\n      }\n    ],\n    "collection-title": "Advances in Neural Information Processing Systems",\n    "editors": [\n      {\n        "given-names": "I.",\n        "family-names": "Guyon"\n      },\n      {\n        "given-names": "U.",\n        "family-names": "Von Luxburg"\n      },\n      {\n        "given-names": "S.",\n        "family-names": "Bengio"\n      },\n      {\n        "given-names": "H.",\n        "family-names": "Wallach"\n      },\n      {\n        "given-names": "R.",\n        "family-names": "Fergus"\n      },\n      {\n        "given-names": "S.",\n        "family-names": "Vishwanathan"\n      },\n      {\n        "given-names": "R.",\n        "family-names": "Garnett"\n      }\n    ],\n    "publisher": {\n      "name": "Curran Associates, Inc."\n    },\n    "title": "Attention is All you Need",\n    "url": "https://proceedings.neurips.cc/paper_files/paper/2017/file/3f5ee243547dee91fbd053c1c4a845aa-Paper.pdf",\n    "volume": 30,\n    "year": 2017\n  }\n}\n
2025-08-02 17:52:45,033 - app.services.extractor - DEBUG - Successfully parsed JSON: {'cff-version': '1.2.0', 'message': "Please cite this software using the metadata from 'preferred-citation'.", 'title': 'Attention is All you Need', 'authors': [{'given-names': 'Ashish', 'family-names': 'Vaswani'}, {'given-names': 'Noam', 'family-names': 'Shazeer'}, {'given-names': 'Niki', 'family-names': 'Parmar'}, {'given-names': 'Jakob', 'family-names': 'Uszkoreit'}, {'given-names': 'Llion', 'family-names': 'Jones'}, {'given-names': 'Aidan N', 'family-names': 'Gomez'}, {'given-names': 'Łukasz', 'family-names': 'Kaiser'}, {'given-names': 'Illia', 'family-names': 'Polosukhin'}], 'preferred-citation': {'type': 'conference-paper', 'authors': [{'given-names': 'Ashish', 'family-names': 'Vaswani'}, {'given-names': 'Noam', 'family-names': 'Shazeer'}, {'given-names': 'Niki', 'family-names': 'Parmar'}, {'given-names': 'Jakob', 'family-names': 'Uszkoreit'}, {'given-names': 'Llion', 'family-names': 'Jones'}, {'given-names': 'Aidan N', 'family-names': 'Gomez'}, {'given-names': 'Łukasz', 'family-names': 'Kaiser'}, {'given-names': 'Illia', 'family-names': 'Polosukhin'}], 'collection-title': 'Advances in Neural Information Processing Systems', 'editors': [{'given-names': 'I.', 'family-names': 'Guyon'}, {'given-names': 'U.', 'family-names': 'Von Luxburg'}, {'given-names': 'S.', 'family-names': 'Bengio'}, {'given-names': 'H.', 'family-names': 'Wallach'}, {'given-names': 'R.', 'family-names': 'Fergus'}, {'given-names': 'S.', 'family-names': 'Vishwanathan'}, {'given-names': 'R.', 'family-names': 'Garnett'}], 'publisher': {'name': 'Curran Associates, Inc.'}, 'title': 'Attention is All you Need', 'url': 'https://proceedings.neurips.cc/paper_files/paper/2017/file/3f5ee243547dee91fbd053c1c4a845aa-Paper.pdf', 'volume': 30, 'year': 2017}}
2025-08-02 17:52:45,051 - app.services.extractor - INFO - Successfully extracted and validated JSON on attempt 1
2025-08-02 17:52:45,052 - app.services.extractor - INFO - Extraction completed: valid=True, attempts=1
2025-08-02 17:53:36,333 - app.services.extractor - INFO - Auto-detecting schema for text with 5 available schemas
2025-08-02 17:53:36,351 - app.services.extractor - DEBUG - Sending schema selection request to LLM
2025-08-02 17:53:39,413 - app.services.extractor - INFO - Input Statistics - Input Tokens: 902, Input Price: 0.00027059999999999996
2025-08-02 17:53:39,413 - app.services.extractor - INFO - Output Statistics - Output Tokens: 3, Output Price: 7.5e-06
2025-08-02 17:53:39,414 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 17:53:39,414 - app.services.extractor - INFO - Total Statistics - Total Tokens: 1383, Total Price: 0.0002781
2025-08-02 17:53:39,414 - app.services.extractor - INFO - Selected schema: github-action
2025-08-02 17:53:43,282 - app.services.extractor - INFO - ExtractorService.extract called
2025-08-02 17:53:43,282 - app.services.extractor - INFO - Starting JSON extraction with max_retries=3
2025-08-02 17:53:43,283 - app.services.extractor - DEBUG - Input text length: 2841 characters
2025-08-02 17:53:43,283 - app.services.extractor - DEBUG - Schema: Github Action
2025-08-02 17:53:43,283 - app.services.extractor - INFO - Extraction attempt 1/3
2025-08-02 17:53:43,283 - app.services.extractor - INFO - Sending request to Gemini (attempt 1)
2025-08-02 17:53:43,283 - app.services.extractor - DEBUG - Conversation history length: 1
2025-08-02 17:53:43,283 - app.services.extractor - DEBUG - Using model: gemini-2.5-pro
2025-08-02 17:54:01,934 - app.services.extractor - INFO - Input Statistics - Input Tokens: 8489, Input Price: 0.0212225
2025-08-02 17:54:01,935 - app.services.extractor - INFO - Output Statistics - Output Tokens: 523, Output Price: 0.00523
2025-08-02 17:54:01,935 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 17:54:01,935 - app.services.extractor - INFO - Total Statistics - Total Tokens: 10128, Total Price: 0.026452499999999997
2025-08-02 17:54:01,935 - app.services.extractor - DEBUG - Generated text length: 1690 characters
2025-08-02 17:54:01,935 - app.services.extractor - DEBUG - LLM response: \n{\n  "name": "MkDocs Publisher",\n  "author": "DevRel Team",\n  "description": "A simple action to build an MkDocs site and push it to the gh-pages branch.",\n  "inputs": {\n    "python-version": {\n      "description": "The version of Python to set up for building.",\n      "required": false,\n      "default": "3.11"\n    },\n    "requirements-file": {\n      "description": "Path to the Python requirements file",\n      "required": true\n    },\n    "gh-token": {\n      "description": "GitHub token for deployment. Usually ${{ secrets.GITHUB_TOKEN }}.",\n      "deprecationMessage": "Prefer using GITHUB_TOKEN environment variable directly if permissions allow.",\n      "required": true\n    }\n  },\n  "outputs": {\n    "page-url": {\n      "description": "The URL of the deployed GitHub Pages site.",\n      "value": "${{ steps.deploy.outputs.page_url }}"\n    }\n  },\n  "runs": {\n    "using": "composite",\n    "steps": [\n      {\n        "uses": "actions/checkout@v4"\n      },\n      {\n        "id": "setup_python",\n        "uses": "actions/setup-python@v5",\n        "with": {\n          "python-version": "${{ inputs.python-version }}"\n        }\n      },\n      {\n        "name": "Install Python Packages",\n        "run": "pip install -r ${{ inputs.requirements-file }}",\n        "shell": "bash"\n      },\n      {\n        "run": "mkdocs build",\n        "shell": "bash"\n      },\n      {\n        "id": "deploy",\n        "uses": "peaceiris/actions-gh-pages@v3",\n        "if": "github.ref == 'refs/heads/main'",\n        "with": {\n          "github_token": "${{ inputs.gh-token }}",\n          "publish_dir": "./site"\n        }\n      }\n    ]\n  },\n  "branding": {\n    "color": "blue",\n    "icon": "book-open"\n  }\n}\n
2025-08-02 17:54:01,935 - app.services.extractor - DEBUG - Successfully parsed JSON: {'name': 'MkDocs Publisher', 'author': 'DevRel Team', 'description': 'A simple action to build an MkDocs site and push it to the gh-pages branch.', 'inputs': {'python-version': {'description': 'The version of Python to set up for building.', 'required': False, 'default': '3.11'}, 'requirements-file': {'description': 'Path to the Python requirements file', 'required': True}, 'gh-token': {'description': 'GitHub token for deployment. Usually ${{ secrets.GITHUB_TOKEN }}.', 'deprecationMessage': 'Prefer using GITHUB_TOKEN environment variable directly if permissions allow.', 'required': True}}, 'outputs': {'page-url': {'description': 'The URL of the deployed GitHub Pages site.', 'value': '${{ steps.deploy.outputs.page_url }}'}}, 'runs': {'using': 'composite', 'steps': [{'uses': 'actions/checkout@v4'}, {'id': 'setup_python', 'uses': 'actions/setup-python@v5', 'with': {'python-version': '${{ inputs.python-version }}'}}, {'name': 'Install Python Packages', 'run': 'pip install -r ${{ inputs.requirements-file }}', 'shell': 'bash'}, {'run': 'mkdocs build', 'shell': 'bash'}, {'id': 'deploy', 'uses': 'peaceiris/actions-gh-pages@v3', 'if': "github.ref == 'refs/heads/main'", 'with': {'github_token': '${{ inputs.gh-token }}', 'publish_dir': './site'}}]}, 'branding': {'color': 'blue', 'icon': 'book-open'}}
2025-08-02 17:54:01,940 - app.services.extractor - INFO - Successfully extracted and validated JSON on attempt 1
2025-08-02 17:54:01,941 - app.services.extractor - INFO - Extraction completed: valid=True, attempts=1
2025-08-02 18:09:24,933 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 18:09:25,654 - app.services.extractor - ERROR - Google API key is required but not provided
2025-08-02 18:18:11,231 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 18:18:11,774 - app.services.extractor - ERROR - Google API key is required but not provided
2025-08-02 18:18:29,679 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 18:18:29,871 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 18:18:29,889 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 18:18:29,892 - app.services.extractor - INFO - No embeddings file found, will need to build embeddings
2025-08-02 18:18:30,360 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 18:18:30,581 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 18:18:30,613 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 18:18:30,622 - app.services.extractor - INFO - No embeddings file found, will need to build embeddings
2025-08-02 18:18:42,273 - app.services.extractor - INFO - Auto-detecting schema using embeddings for text with 5 available schemas
2025-08-02 18:18:42,273 - app.services.extractor - INFO - Rebuilding schema embeddings...
2025-08-02 18:18:42,273 - app.services.extractor - INFO - Building embeddings for 5 schemas
2025-08-02 18:18:42,274 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,274 - app.services.extractor - ERROR - Failed to generate embedding for schema product-info-001: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,274 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,274 - app.services.extractor - ERROR - Failed to generate embedding for schema github-action: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,274 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,274 - app.services.extractor - ERROR - Failed to generate embedding for schema person-info-001: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,274 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,275 - app.services.extractor - ERROR - Failed to generate embedding for schema citation-file: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,275 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,275 - app.services.extractor - ERROR - Failed to generate embedding for schema resume-schema: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,275 - app.services.extractor - WARNING - No embeddings were generated
2025-08-02 18:18:42,275 - app.services.extractor - WARNING - No embeddings available, rebuilding...
2025-08-02 18:18:42,275 - app.services.extractor - INFO - Building embeddings for 5 schemas
2025-08-02 18:18:42,275 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,275 - app.services.extractor - ERROR - Failed to generate embedding for schema product-info-001: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,275 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,275 - app.services.extractor - ERROR - Failed to generate embedding for schema github-action: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,276 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,276 - app.services.extractor - ERROR - Failed to generate embedding for schema person-info-001: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,276 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,276 - app.services.extractor - ERROR - Failed to generate embedding for schema citation-file: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,276 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,276 - app.services.extractor - ERROR - Failed to generate embedding for schema resume-schema: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:42,276 - app.services.extractor - WARNING - No embeddings were generated
2025-08-02 18:18:42,276 - app.services.extractor - ERROR - Embedding-based selection failed: Failed to build embeddings
2025-08-02 18:18:42,276 - app.services.extractor - INFO - Falling back to LLM-based selection
2025-08-02 18:18:42,276 - app.services.extractor - INFO - Auto-detecting schema using LLM for text with 5 available schemas
2025-08-02 18:18:42,276 - app.services.extractor - DEBUG - Sending schema selection request to LLM
2025-08-02 18:18:46,990 - app.services.extractor - INFO - Input Statistics - Input Tokens: 902, Input Price: 0.00027059999999999996
2025-08-02 18:18:46,991 - app.services.extractor - INFO - Output Statistics - Output Tokens: 3, Output Price: 7.5e-06
2025-08-02 18:18:46,991 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 18:18:46,991 - app.services.extractor - INFO - Total Statistics - Total Tokens: 1446, Total Price: 0.0002781
2025-08-02 18:18:46,991 - app.services.extractor - INFO - Selected schema via LLM: github-action
2025-08-02 18:18:53,665 - app.services.extractor - INFO - Auto-detecting schema using embeddings for text with 5 available schemas
2025-08-02 18:18:53,665 - app.services.extractor - INFO - Rebuilding schema embeddings...
2025-08-02 18:18:53,665 - app.services.extractor - INFO - Building embeddings for 5 schemas
2025-08-02 18:18:53,665 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,665 - app.services.extractor - ERROR - Failed to generate embedding for schema product-info-001: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,665 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,665 - app.services.extractor - ERROR - Failed to generate embedding for schema github-action: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,665 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,665 - app.services.extractor - ERROR - Failed to generate embedding for schema person-info-001: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,665 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,665 - app.services.extractor - ERROR - Failed to generate embedding for schema citation-file: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,665 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,665 - app.services.extractor - ERROR - Failed to generate embedding for schema resume-schema: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,665 - app.services.extractor - WARNING - No embeddings were generated
2025-08-02 18:18:53,666 - app.services.extractor - WARNING - No embeddings available, rebuilding...
2025-08-02 18:18:53,666 - app.services.extractor - INFO - Building embeddings for 5 schemas
2025-08-02 18:18:53,666 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,666 - app.services.extractor - ERROR - Failed to generate embedding for schema product-info-001: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,666 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,666 - app.services.extractor - ERROR - Failed to generate embedding for schema github-action: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,666 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,666 - app.services.extractor - ERROR - Failed to generate embedding for schema person-info-001: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,666 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,666 - app.services.extractor - ERROR - Failed to generate embedding for schema citation-file: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,666 - app.services.extractor - ERROR - Failed to generate embedding: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,666 - app.services.extractor - ERROR - Failed to generate embedding for schema resume-schema: Models.embed_content() got an unexpected keyword argument 'content'. Did you mean 'contents'?
2025-08-02 18:18:53,666 - app.services.extractor - WARNING - No embeddings were generated
2025-08-02 18:18:53,666 - app.services.extractor - ERROR - Embedding-based selection failed: Failed to build embeddings
2025-08-02 18:18:53,666 - app.services.extractor - INFO - Falling back to LLM-based selection
2025-08-02 18:18:53,666 - app.services.extractor - INFO - Auto-detecting schema using LLM for text with 5 available schemas
2025-08-02 18:18:53,666 - app.services.extractor - DEBUG - Sending schema selection request to LLM
2025-08-02 18:18:57,218 - app.services.extractor - INFO - Input Statistics - Input Tokens: 942, Input Price: 0.0002826
2025-08-02 18:18:57,218 - app.services.extractor - INFO - Output Statistics - Output Tokens: 3, Output Price: 7.5e-06
2025-08-02 18:18:57,218 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 18:18:57,218 - app.services.extractor - INFO - Total Statistics - Total Tokens: 1268, Total Price: 0.0002901
2025-08-02 18:18:57,218 - app.services.extractor - INFO - Selected schema via LLM: resume-schema
2025-08-02 18:19:37,497 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 18:19:37,923 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 18:19:37,998 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 18:19:38,001 - app.services.extractor - INFO - No embeddings file found, will need to build embeddings
2025-08-02 18:20:41,082 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 18:20:41,338 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 18:20:41,362 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 18:20:41,363 - app.services.extractor - INFO - No embeddings file found, will need to build embeddings
2025-08-02 18:20:59,318 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 18:20:59,603 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 18:20:59,619 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 18:20:59,622 - app.services.extractor - INFO - No embeddings file found, will need to build embeddings
2025-08-02 18:21:03,694 - app.services.extractor - INFO - Auto-detecting schema using embeddings for text with 5 available schemas
2025-08-02 18:21:03,694 - app.services.extractor - INFO - Rebuilding schema embeddings...
2025-08-02 18:21:03,694 - app.services.extractor - INFO - Building embeddings for 5 schemas
2025-08-02 18:21:04,277 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:04,277 - app.services.extractor - ERROR - Failed to generate embedding for schema product-info-001: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:05,508 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:05,508 - app.services.extractor - ERROR - Failed to generate embedding for schema github-action: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:06,044 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:06,044 - app.services.extractor - ERROR - Failed to generate embedding for schema person-info-001: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:07,231 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:07,231 - app.services.extractor - ERROR - Failed to generate embedding for schema citation-file: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:07,767 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:07,767 - app.services.extractor - ERROR - Failed to generate embedding for schema resume-schema: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:07,767 - app.services.extractor - WARNING - No embeddings were generated
2025-08-02 18:21:07,767 - app.services.extractor - WARNING - No embeddings available, rebuilding...
2025-08-02 18:21:07,767 - app.services.extractor - INFO - Building embeddings for 5 schemas
2025-08-02 18:21:09,015 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:09,016 - app.services.extractor - ERROR - Failed to generate embedding for schema product-info-001: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:09,512 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:09,512 - app.services.extractor - ERROR - Failed to generate embedding for schema github-action: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:10,751 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:10,751 - app.services.extractor - ERROR - Failed to generate embedding for schema person-info-001: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:11,229 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:11,230 - app.services.extractor - ERROR - Failed to generate embedding for schema citation-file: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:12,493 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:12,494 - app.services.extractor - ERROR - Failed to generate embedding for schema resume-schema: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:12,494 - app.services.extractor - WARNING - No embeddings were generated
2025-08-02 18:21:12,494 - app.services.extractor - ERROR - Embedding-based selection failed: Failed to build embeddings
2025-08-02 18:21:12,494 - app.services.extractor - INFO - Falling back to LLM-based selection
2025-08-02 18:21:12,494 - app.services.extractor - INFO - Auto-detecting schema using LLM for text with 5 available schemas
2025-08-02 18:21:12,494 - app.services.extractor - DEBUG - Sending schema selection request to LLM
2025-08-02 18:21:16,062 - app.services.extractor - INFO - Input Statistics - Input Tokens: 942, Input Price: 0.0002826
2025-08-02 18:21:16,062 - app.services.extractor - INFO - Output Statistics - Output Tokens: 3, Output Price: 7.5e-06
2025-08-02 18:21:16,062 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 18:21:16,062 - app.services.extractor - INFO - Total Statistics - Total Tokens: 1622, Total Price: 0.0002901
2025-08-02 18:21:16,067 - app.services.extractor - INFO - Selected schema via LLM: resume-schema
2025-08-02 18:21:20,238 - app.services.extractor - INFO - Auto-detecting schema using embeddings for text with 5 available schemas
2025-08-02 18:21:20,239 - app.services.extractor - INFO - Rebuilding schema embeddings...
2025-08-02 18:21:20,239 - app.services.extractor - INFO - Building embeddings for 5 schemas
2025-08-02 18:21:21,463 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:21,463 - app.services.extractor - ERROR - Failed to generate embedding for schema product-info-001: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:22,879 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:22,879 - app.services.extractor - ERROR - Failed to generate embedding for schema github-action: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:24,127 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:24,127 - app.services.extractor - ERROR - Failed to generate embedding for schema person-info-001: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:25,502 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:25,502 - app.services.extractor - ERROR - Failed to generate embedding for schema citation-file: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:26,464 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:26,464 - app.services.extractor - ERROR - Failed to generate embedding for schema resume-schema: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:26,464 - app.services.extractor - WARNING - No embeddings were generated
2025-08-02 18:21:26,464 - app.services.extractor - WARNING - No embeddings available, rebuilding...
2025-08-02 18:21:26,465 - app.services.extractor - INFO - Building embeddings for 5 schemas
2025-08-02 18:21:27,342 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:27,342 - app.services.extractor - ERROR - Failed to generate embedding for schema product-info-001: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:28,212 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:28,212 - app.services.extractor - ERROR - Failed to generate embedding for schema github-action: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:29,028 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:29,028 - app.services.extractor - ERROR - Failed to generate embedding for schema person-info-001: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:29,970 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:29,970 - app.services.extractor - ERROR - Failed to generate embedding for schema citation-file: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:30,843 - app.services.extractor - ERROR - Failed to generate embedding: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:30,843 - app.services.extractor - ERROR - Failed to generate embedding for schema resume-schema: 'EmbedContentResponse' object has no attribute 'embedding'
2025-08-02 18:21:30,843 - app.services.extractor - WARNING - No embeddings were generated
2025-08-02 18:21:30,843 - app.services.extractor - ERROR - Embedding-based selection failed: Failed to build embeddings
2025-08-02 18:21:30,843 - app.services.extractor - INFO - Falling back to LLM-based selection
2025-08-02 18:21:30,843 - app.services.extractor - INFO - Auto-detecting schema using LLM for text with 5 available schemas
2025-08-02 18:21:30,843 - app.services.extractor - DEBUG - Sending schema selection request to LLM
2025-08-02 18:21:36,700 - app.services.extractor - INFO - Input Statistics - Input Tokens: 483, Input Price: 0.0001449
2025-08-02 18:21:36,701 - app.services.extractor - INFO - Output Statistics - Output Tokens: 7, Output Price: 1.75e-05
2025-08-02 18:21:36,701 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 18:21:36,701 - app.services.extractor - INFO - Total Statistics - Total Tokens: 1435, Total Price: 0.0001624
2025-08-02 18:21:36,701 - app.services.extractor - INFO - Selected schema via LLM: person-info-001
2025-08-02 18:21:49,173 - app.services.extractor - INFO - ExtractorService.extract called
2025-08-02 18:21:49,173 - app.services.extractor - INFO - Starting JSON extraction with max_retries=3
2025-08-02 18:21:49,173 - app.services.extractor - DEBUG - Input text length: 141 characters
2025-08-02 18:21:49,173 - app.services.extractor - DEBUG - Schema: Person Information
2025-08-02 18:21:49,173 - app.services.extractor - INFO - Extraction attempt 1/3
2025-08-02 18:21:49,173 - app.services.extractor - INFO - Sending request to Gemini (attempt 1)
2025-08-02 18:21:49,173 - app.services.extractor - DEBUG - Conversation history length: 1
2025-08-02 18:21:49,173 - app.services.extractor - DEBUG - Using model: gemini-2.5-pro
2025-08-02 18:21:59,440 - app.services.extractor - INFO - Input Statistics - Input Tokens: 258, Input Price: 0.000645
2025-08-02 18:21:59,440 - app.services.extractor - INFO - Output Statistics - Output Tokens: 40, Output Price: 0.0004
2025-08-02 18:21:59,440 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 18:21:59,440 - app.services.extractor - INFO - Total Statistics - Total Tokens: 1286, Total Price: 0.001045
2025-08-02 18:21:59,440 - app.services.extractor - DEBUG - Generated text length: 76 characters
2025-08-02 18:21:59,440 - app.services.extractor - DEBUG - LLM response: \n{\n  "name": "John Smith",\n  "age": 28,\n  "email": "john.smith@gmail.com"\n}\n
2025-08-02 18:21:59,440 - app.services.extractor - DEBUG - Successfully parsed JSON: {'name': 'John Smith', 'age': 28, 'email': 'john.smith@gmail.com'}
2025-08-02 18:21:59,443 - app.services.extractor - INFO - Successfully extracted and validated JSON on attempt 1
2025-08-02 18:21:59,443 - app.services.extractor - INFO - Extraction completed: valid=True, attempts=1
2025-08-02 18:22:51,085 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 18:22:51,422 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 18:22:51,472 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 18:22:51,473 - app.services.extractor - INFO - No embeddings file found, will need to build embeddings
2025-08-02 18:23:06,005 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 18:23:06,275 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 18:23:06,313 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 18:23:06,314 - app.services.extractor - INFO - No embeddings file found, will need to build embeddings
2025-08-02 18:24:35,086 - app.services.extractor - INFO - Auto-detecting schema using embeddings for text with 5 available schemas
2025-08-02 18:24:35,086 - app.services.extractor - INFO - Rebuilding schema embeddings...
2025-08-02 18:24:35,086 - app.services.extractor - INFO - Building embeddings for 5 schemas
2025-08-02 18:24:36,766 - app.services.extractor - DEBUG - Generated embedding for schema: product-info-001
2025-08-02 18:24:37,193 - app.services.extractor - DEBUG - Generated embedding for schema: github-action
2025-08-02 18:24:38,336 - app.services.extractor - DEBUG - Generated embedding for schema: person-info-001
2025-08-02 18:24:38,768 - app.services.extractor - DEBUG - Generated embedding for schema: citation-file
2025-08-02 18:24:39,907 - app.services.extractor - DEBUG - Generated embedding for schema: resume-schema
2025-08-02 18:24:39,909 - app.services.extractor - INFO - Saved 5 embeddings to /Users/syedal/oss/JsonBuilder/app/data/schema_embeddings.npz
2025-08-02 18:24:40,355 - app.services.extractor - INFO - Top embedding match: resume-schema (similarity: 0.5453)
2025-08-02 18:24:40,355 - app.services.extractor - INFO - Selected schema via embedding: resume-schema
2025-08-02 18:24:57,961 - app.services.extractor - INFO - ExtractorService.extract called
2025-08-02 18:24:57,961 - app.services.extractor - INFO - Starting JSON extraction with max_retries=3
2025-08-02 18:24:57,961 - app.services.extractor - DEBUG - Input text length: 2704 characters
2025-08-02 18:24:57,961 - app.services.extractor - DEBUG - Schema: Résumé Schema
2025-08-02 18:24:57,961 - app.services.extractor - INFO - Extraction attempt 1/3
2025-08-02 18:24:57,962 - app.services.extractor - INFO - Sending request to Gemini (attempt 1)
2025-08-02 18:24:57,962 - app.services.extractor - DEBUG - Conversation history length: 1
2025-08-02 18:24:57,962 - app.services.extractor - DEBUG - Using model: gemini-2.5-pro
2025-08-02 18:25:25,053 - app.services.extractor - INFO - Input Statistics - Input Tokens: 4811, Input Price: 0.0120275
2025-08-02 18:25:25,053 - app.services.extractor - INFO - Output Statistics - Output Tokens: 1223, Output Price: 0.01223
2025-08-02 18:25:25,053 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 18:25:25,053 - app.services.extractor - INFO - Total Statistics - Total Tokens: 7776, Total Price: 0.0242575
2025-08-02 18:25:25,053 - app.services.extractor - DEBUG - Generated text length: 4365 characters
2025-08-02 18:25:25,053 - app.services.extractor - DEBUG - LLM response: \n{\n  "basics": {\n    "name": "Syed Abdul Khader",\n    "label": "Building Agents | Research Enthusiast | CV and NLP Engineer",\n    "email": "abdksyed@gmail.com",\n    "phone": "+91-7013542783",\n    "location": {\n      "city": "Bangalore",\n      "countryCode": "IN"\n    }\n  },\n  "work": [\n    {\n      "name": "Amuse Labs",\n      "location": "Bangalore, India",\n      "position": "Senior AI Software Engineer",\n      "startDate": "2024-05",\n      "highlights": [\n        "Deployed PuzzleMe Agent, a multi-agent function-calling workflow that automates ideation, customization, monitoring, and logging, doubling creator throughput",\n        "Designed synthetic data generators and rubric-based evaluation sets covering varied edge cases, cutting manual QA time by 70%",\n        "Architected AI-assisted puzzle creation suite, raising user-generated content by 60% via modular LLM pipelines and fine-tuned PyTorch/Huggingface models",\n        "Migrated services to FastAPI and integrated with a TypeScript frontend, trimming latency 50% and adding observability dashboards for real-time model health"\n      ]\n    },\n    {\n      "name": "Mass General Hospital, Harvard Medical School",\n      "location": "Boston, USA",\n      "position": "Research Scholar",\n      "startDate": "2023-04",\n      "endDate": "2024-04",\n      "highlights": [\n        "Achieved SOTA surgical video segmentation (92.26% binary, 74.43% multi-class IoU) through custom vision transformers and active-learning datasets",\n        "Developed annotation platform with SAM-Med2D and XMem++ plus quality-control rubrics, reducing labeling effort 75%"\n      ]\n    },\n    {\n      "name": "Infinstor",\n      "location": "Remote",\n      "position": "Data Scientist",\n      "startDate": "2021-06",\n      "endDate": "2022-07",\n      "highlights": [\n        "Built OCR system for document processing with table detection and handwritten text recognition",\n        "Developed LayoutLM-based document understanding pipeline, cutting processing time by 90%",\n        "Implemented anomaly-detection for SQL queries and CloudWatch logs using LogBERT, crafting DSL-driven evaluation sets that reduced false positives 35%"\n      ]\n    },\n    {\n      "name": "Infor",\n      "location": "Hyderabad, India",\n      "position": "Dev Business Analyst",\n      "startDate": "2019-07",\n      "endDate": "2021-04",\n      "highlights": [\n        "Engineered ETL pipelines for CRM/ERP data migration from Microsoft CRM and Salesforce to the Infor ecosystem",\n        "Built automated reporting solutions with Infor Birst and VBA, delivering analytics dashboards for business units"\n      ]\n    }\n  ],\n  "education": [\n    {\n      "institution": "Plaksha University",\n      "studyType": "Technology Leaders Program",\n      "score": "GPA: 9.6",\n      "courses": [\n        "Teaching Assistant – NLP with Prof. Monojit Choudhury"\n      ]\n    }\n  ],\n  "awards": [\n    {\n      "title": "Gold Medalist",\n      "awarder": "Plaksha University"\n    },\n    {\n      "title": "Best Student Committee",\n      "awarder": "Plaksha University"\n    },\n    {\n      "title": "Spirit of Plaksha",\n      "awarder": "Plaksha University"\n    }\n  ],\n  "publications": [\n    {\n      "name": "Data Efficiency for Robust Surgical Video Segmentation",\n      "releaseDate": "2025",\n      "summary": "Under Review"\n    },\n    {\n      "name": "Thoracic Surgery Video Analysis for Surgical Phase Recognition",\n      "publisher": "Workshop on Robot-Assisted Medical Imaging, IEEE ICRA",\n      "releaseDate": "2024"\n    },\n    {\n      "name": "Medical Surgery Stream Segmentation to Detect and Track Robotic Tools",\n      "publisher": "IEEE Conference on AI for Medicine, Health, and Care",\n      "releaseDate": "2024"\n    },\n    {\n      "name": "Utilizing AI for Surgical Anatomy and Phase Recognition in Thoracic Surgery",\n      "publisher": "IEEE Conference on Biomedical Engineering Instrumentation",\n      "releaseDate": "2024"\n    }\n  ],\n  "skills": [\n    {\n      "name": "Languages and Frameworks",\n      "keywords": [\n        "Python",\n        "FastAPI",\n        "PyTorch",\n        "Huggingface",\n        "Postgres"\n      ]\n    },\n    {\n      "name": "Technologies",\n      "keywords": [\n        "LLMs/VLMs",\n        "CV",\n        "NLP",\n        "RAG",\n        "LLM Agents",\n        "Prompt Optimization",\n        "Docker",\n        "Git"\n      ]\n    }\n  ]\n}\n
2025-08-02 18:25:25,054 - app.services.extractor - DEBUG - Successfully parsed JSON: {'basics': {'name': 'Syed Abdul Khader', 'label': 'Building Agents | Research Enthusiast | CV and NLP Engineer', 'email': 'abdksyed@gmail.com', 'phone': '+91-7013542783', 'location': {'city': 'Bangalore', 'countryCode': 'IN'}}, 'work': [{'name': 'Amuse Labs', 'location': 'Bangalore, India', 'position': 'Senior AI Software Engineer', 'startDate': '2024-05', 'highlights': ['Deployed PuzzleMe Agent, a multi-agent function-calling workflow that automates ideation, customization, monitoring, and logging, doubling creator throughput', 'Designed synthetic data generators and rubric-based evaluation sets covering varied edge cases, cutting manual QA time by 70%', 'Architected AI-assisted puzzle creation suite, raising user-generated content by 60% via modular LLM pipelines and fine-tuned PyTorch/Huggingface models', 'Migrated services to FastAPI and integrated with a TypeScript frontend, trimming latency 50% and adding observability dashboards for real-time model health']}, {'name': 'Mass General Hospital, Harvard Medical School', 'location': 'Boston, USA', 'position': 'Research Scholar', 'startDate': '2023-04', 'endDate': '2024-04', 'highlights': ['Achieved SOTA surgical video segmentation (92.26% binary, 74.43% multi-class IoU) through custom vision transformers and active-learning datasets', 'Developed annotation platform with SAM-Med2D and XMem++ plus quality-control rubrics, reducing labeling effort 75%']}, {'name': 'Infinstor', 'location': 'Remote', 'position': 'Data Scientist', 'startDate': '2021-06', 'endDate': '2022-07', 'highlights': ['Built OCR system for document processing with table detection and handwritten text recognition', 'Developed LayoutLM-based document understanding pipeline, cutting processing time by 90%', 'Implemented anomaly-detection for SQL queries and CloudWatch logs using LogBERT, crafting DSL-driven evaluation sets that reduced false positives 35%']}, {'name': 'Infor', 'location': 'Hyderabad, India', 'position': 'Dev Business Analyst', 'startDate': '2019-07', 'endDate': '2021-04', 'highlights': ['Engineered ETL pipelines for CRM/ERP data migration from Microsoft CRM and Salesforce to the Infor ecosystem', 'Built automated reporting solutions with Infor Birst and VBA, delivering analytics dashboards for business units']}], 'education': [{'institution': 'Plaksha University', 'studyType': 'Technology Leaders Program', 'score': 'GPA: 9.6', 'courses': ['Teaching Assistant – NLP with Prof. Monojit Choudhury']}], 'awards': [{'title': 'Gold Medalist', 'awarder': 'Plaksha University'}, {'title': 'Best Student Committee', 'awarder': 'Plaksha University'}, {'title': 'Spirit of Plaksha', 'awarder': 'Plaksha University'}], 'publications': [{'name': 'Data Efficiency for Robust Surgical Video Segmentation', 'releaseDate': '2025', 'summary': 'Under Review'}, {'name': 'Thoracic Surgery Video Analysis for Surgical Phase Recognition', 'publisher': 'Workshop on Robot-Assisted Medical Imaging, IEEE ICRA', 'releaseDate': '2024'}, {'name': 'Medical Surgery Stream Segmentation to Detect and Track Robotic Tools', 'publisher': 'IEEE Conference on AI for Medicine, Health, and Care', 'releaseDate': '2024'}, {'name': 'Utilizing AI for Surgical Anatomy and Phase Recognition in Thoracic Surgery', 'publisher': 'IEEE Conference on Biomedical Engineering Instrumentation', 'releaseDate': '2024'}], 'skills': [{'name': 'Languages and Frameworks', 'keywords': ['Python', 'FastAPI', 'PyTorch', 'Huggingface', 'Postgres']}, {'name': 'Technologies', 'keywords': ['LLMs/VLMs', 'CV', 'NLP', 'RAG', 'LLM Agents', 'Prompt Optimization', 'Docker', 'Git']}]}
2025-08-02 18:25:25,063 - app.services.extractor - INFO - Successfully extracted and validated JSON on attempt 1
2025-08-02 18:25:25,063 - app.services.extractor - INFO - Extraction completed: valid=True, attempts=1
2025-08-02 18:25:42,426 - app.services.extractor - INFO - Auto-detecting schema using embeddings for text with 5 available schemas
2025-08-02 18:25:44,003 - app.services.extractor - INFO - Top embedding match: person-info-001 (similarity: 0.5245)
2025-08-02 18:25:44,003 - app.services.extractor - INFO - Selected schema via embedding: person-info-001
2025-08-02 18:25:57,825 - app.services.extractor - INFO - Auto-detecting schema using LLM for text with 5 available schemas
2025-08-02 18:25:57,825 - app.services.extractor - DEBUG - Sending schema selection request to LLM
2025-08-02 18:26:02,061 - app.services.extractor - INFO - Input Statistics - Input Tokens: 469, Input Price: 0.00014069999999999998
2025-08-02 18:26:02,061 - app.services.extractor - INFO - Output Statistics - Output Tokens: 7, Output Price: 1.75e-05
2025-08-02 18:26:02,061 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 18:26:02,062 - app.services.extractor - INFO - Total Statistics - Total Tokens: 1049, Total Price: 0.00015819999999999997
2025-08-02 18:26:02,062 - app.services.extractor - INFO - Selected schema via LLM: person-info-001
2025-08-02 18:39:02,363 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 18:39:03,250 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 18:39:03,324 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 18:39:03,328 - app.services.extractor - INFO - Loaded 5 embeddings from file
2025-08-02 18:39:03,671 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 18:39:04,010 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 18:39:04,042 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 18:39:04,043 - app.services.extractor - INFO - Loaded 5 embeddings from file
2025-08-02 18:39:19,968 - app.services.extractor - INFO - ExtractorService.extract called
2025-08-02 18:39:19,968 - app.services.extractor - INFO - Starting JSON extraction with max_retries=3
2025-08-02 18:39:19,969 - app.services.extractor - DEBUG - Input text length: 2704 characters
2025-08-02 18:39:19,969 - app.services.extractor - DEBUG - Schema: Résumé Schema
2025-08-02 18:39:19,969 - app.services.extractor - INFO - Extraction attempt 1/3
2025-08-02 18:39:19,969 - app.services.extractor - INFO - Sending request to Gemini (attempt 1)
2025-08-02 18:39:19,969 - app.services.extractor - DEBUG - Conversation history length: 1
2025-08-02 18:39:19,969 - app.services.extractor - DEBUG - Using model: gemini-2.5-pro
2025-08-02 18:39:47,617 - app.services.extractor - INFO - Input Statistics - Input Tokens: 4811, Input Price: 0.0120275
2025-08-02 18:39:47,617 - app.services.extractor - INFO - Output Statistics - Output Tokens: 1206, Output Price: 0.01206
2025-08-02 18:39:47,617 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 18:39:47,617 - app.services.extractor - INFO - Total Statistics - Total Tokens: 7904, Total Price: 0.024087499999999998
2025-08-02 18:39:47,617 - app.services.extractor - DEBUG - Generated text length: 4311 characters
2025-08-02 18:39:47,617 - app.services.extractor - DEBUG - LLM response: \n{\n  "basics": {\n    "name": "Syed Abdul Khader",\n    "label": "Building Agents | Research Enthusiast | CV and NLP Engineer",\n    "email": "abdksyed@gmail.com",\n    "phone": "+91-7013542783"\n  },\n  "work": [\n    {\n      "name": "Amuse Labs",\n      "location": "Bangalore, India",\n      "position": "Senior AI Software Engineer",\n      "startDate": "2024-05",\n      "highlights": [\n        "Deployed PuzzleMe Agent, a multi-agent function-calling workflow that automates ideation, customization, monitoring, and logging, doubling creator throughput",\n        "Designed synthetic data generators and rubric-based evaluation sets covering varied edge cases, cutting manual QA time by 70%",\n        "Architected AI-assisted puzzle creation suite, raising user-generated content by 60% via modular LLM pipelines and fine-tuned PyTorch/Huggingface models",\n        "Migrated services to FastAPI and integrated with a TypeScript frontend, trimming latency 50% and adding observability dashboards for real-time model health"\n      ]\n    },\n    {\n      "name": "Mass General Hospital, Harvard Medical School",\n      "location": "Boston, USA",\n      "position": "Research Scholar",\n      "startDate": "2023-04",\n      "endDate": "2024-04",\n      "highlights": [\n        "Achieved SOTA surgical video segmentation (92.26% binary, 74.43% multi-class IoU) through custom vision transformers and active-learning datasets",\n        "Developed annotation platform with SAM-Med2D and XMem++ plus quality-control rubrics, reducing labeling effort 75%"\n      ]\n    },\n    {\n      "name": "Infinstor",\n      "location": "Remote",\n      "position": "Data Scientist",\n      "startDate": "2021-06",\n      "endDate": "2022-07",\n      "highlights": [\n        "Built OCR system for document processing with table detection and handwritten text recognition",\n        "Developed LayoutLM-based document understanding pipeline, cutting processing time by 90%",\n        "Implemented anomaly-detection for SQL queries and CloudWatch logs using LogBERT, crafting DSL-driven evaluation sets that reduced false positives 35%"\n      ]\n    },\n    {\n      "name": "Infor",\n      "location": "Hyderabad, India",\n      "position": "Dev Business Analyst",\n      "startDate": "2019-07",\n      "endDate": "2021-04",\n      "highlights": [\n        "Engineered ETL pipelines for CRM/ERP data migration from Microsoft CRM and Salesforce to the Infor ecosystem",\n        "Built automated reporting solutions with Infor Birst and VBA, delivering analytics dashboards for business units"\n      ]\n    }\n  ],\n  "education": [\n    {\n      "institution": "Plaksha University",\n      "studyType": "Technology Leaders Program",\n      "score": "9.6",\n      "courses": [\n        "Teaching Assistant – NLP with Prof. Monojit Choudhury"\n      ]\n    }\n  ],\n  "awards": [\n    {\n      "title": "Gold Medalist",\n      "awarder": "Plaksha University",\n      "summary": "GPA: 9.6"\n    },\n    {\n      "title": "Best Student Committee",\n      "awarder": "Plaksha University"\n    },\n    {\n      "title": "Spirit of Plaksha",\n      "awarder": "Plaksha University"\n    }\n  ],\n  "publications": [\n    {\n      "name": "Data Efficiency for Robust Surgical Video Segmentation",\n      "releaseDate": "2025",\n      "summary": "Under Review"\n    },\n    {\n      "name": "Thoracic Surgery Video Analysis for Surgical Phase Recognition",\n      "publisher": "Workshop on Robot-Assisted Medical Imaging, IEEE ICRA",\n      "releaseDate": "2024"\n    },\n    {\n      "name": "Medical Surgery Stream Segmentation to Detect and Track Robotic Tools",\n      "publisher": "IEEE Conference on AI for Medicine, Health, and Care",\n      "releaseDate": "2024"\n    },\n    {\n      "name": "Utilizing AI for Surgical Anatomy and Phase Recognition in Thoracic Surgery",\n      "publisher": "IEEE Conference on Biomedical Engineering Instrumentation",\n      "releaseDate": "2024"\n    }\n  ],\n  "skills": [\n    {\n      "name": "Languages and Frameworks",\n      "keywords": [\n        "Python",\n        "FastAPI",\n        "PyTorch",\n        "Huggingface",\n        "Postgres"\n      ]\n    },\n    {\n      "name": "Technologies",\n      "keywords": [\n        "LLMs/VLMs",\n        "CV",\n        "NLP",\n        "RAG",\n        "LLM Agents",\n        "Prompt Optimization",\n        "Docker",\n        "Git"\n      ]\n    }\n  ]\n}\n
2025-08-02 18:39:47,618 - app.services.extractor - DEBUG - Successfully parsed JSON: {'basics': {'name': 'Syed Abdul Khader', 'label': 'Building Agents | Research Enthusiast | CV and NLP Engineer', 'email': 'abdksyed@gmail.com', 'phone': '+91-7013542783'}, 'work': [{'name': 'Amuse Labs', 'location': 'Bangalore, India', 'position': 'Senior AI Software Engineer', 'startDate': '2024-05', 'highlights': ['Deployed PuzzleMe Agent, a multi-agent function-calling workflow that automates ideation, customization, monitoring, and logging, doubling creator throughput', 'Designed synthetic data generators and rubric-based evaluation sets covering varied edge cases, cutting manual QA time by 70%', 'Architected AI-assisted puzzle creation suite, raising user-generated content by 60% via modular LLM pipelines and fine-tuned PyTorch/Huggingface models', 'Migrated services to FastAPI and integrated with a TypeScript frontend, trimming latency 50% and adding observability dashboards for real-time model health']}, {'name': 'Mass General Hospital, Harvard Medical School', 'location': 'Boston, USA', 'position': 'Research Scholar', 'startDate': '2023-04', 'endDate': '2024-04', 'highlights': ['Achieved SOTA surgical video segmentation (92.26% binary, 74.43% multi-class IoU) through custom vision transformers and active-learning datasets', 'Developed annotation platform with SAM-Med2D and XMem++ plus quality-control rubrics, reducing labeling effort 75%']}, {'name': 'Infinstor', 'location': 'Remote', 'position': 'Data Scientist', 'startDate': '2021-06', 'endDate': '2022-07', 'highlights': ['Built OCR system for document processing with table detection and handwritten text recognition', 'Developed LayoutLM-based document understanding pipeline, cutting processing time by 90%', 'Implemented anomaly-detection for SQL queries and CloudWatch logs using LogBERT, crafting DSL-driven evaluation sets that reduced false positives 35%']}, {'name': 'Infor', 'location': 'Hyderabad, India', 'position': 'Dev Business Analyst', 'startDate': '2019-07', 'endDate': '2021-04', 'highlights': ['Engineered ETL pipelines for CRM/ERP data migration from Microsoft CRM and Salesforce to the Infor ecosystem', 'Built automated reporting solutions with Infor Birst and VBA, delivering analytics dashboards for business units']}], 'education': [{'institution': 'Plaksha University', 'studyType': 'Technology Leaders Program', 'score': '9.6', 'courses': ['Teaching Assistant – NLP with Prof. Monojit Choudhury']}], 'awards': [{'title': 'Gold Medalist', 'awarder': 'Plaksha University', 'summary': 'GPA: 9.6'}, {'title': 'Best Student Committee', 'awarder': 'Plaksha University'}, {'title': 'Spirit of Plaksha', 'awarder': 'Plaksha University'}], 'publications': [{'name': 'Data Efficiency for Robust Surgical Video Segmentation', 'releaseDate': '2025', 'summary': 'Under Review'}, {'name': 'Thoracic Surgery Video Analysis for Surgical Phase Recognition', 'publisher': 'Workshop on Robot-Assisted Medical Imaging, IEEE ICRA', 'releaseDate': '2024'}, {'name': 'Medical Surgery Stream Segmentation to Detect and Track Robotic Tools', 'publisher': 'IEEE Conference on AI for Medicine, Health, and Care', 'releaseDate': '2024'}, {'name': 'Utilizing AI for Surgical Anatomy and Phase Recognition in Thoracic Surgery', 'publisher': 'IEEE Conference on Biomedical Engineering Instrumentation', 'releaseDate': '2024'}], 'skills': [{'name': 'Languages and Frameworks', 'keywords': ['Python', 'FastAPI', 'PyTorch', 'Huggingface', 'Postgres']}, {'name': 'Technologies', 'keywords': ['LLMs/VLMs', 'CV', 'NLP', 'RAG', 'LLM Agents', 'Prompt Optimization', 'Docker', 'Git']}]}
2025-08-02 18:39:47,621 - app.services.extractor - INFO - Successfully extracted and validated JSON on attempt 1
2025-08-02 18:39:47,621 - app.services.extractor - INFO - Extraction completed: valid=True, attempts=1
2025-08-02 18:40:25,996 - app.services.extractor - INFO - ExtractorService.extract called
2025-08-02 18:40:25,997 - app.services.extractor - INFO - Starting JSON extraction with max_retries=3
2025-08-02 18:40:25,997 - app.services.extractor - DEBUG - Input text length: 2841 characters
2025-08-02 18:40:25,997 - app.services.extractor - DEBUG - Schema: Github Action
2025-08-02 18:40:25,997 - app.services.extractor - INFO - Extraction attempt 1/3
2025-08-02 18:40:25,997 - app.services.extractor - INFO - Sending request to Gemini (attempt 1)
2025-08-02 18:40:25,997 - app.services.extractor - DEBUG - Conversation history length: 1
2025-08-02 18:40:25,997 - app.services.extractor - DEBUG - Using model: gemini-2.5-pro
2025-08-02 18:40:47,679 - app.services.extractor - INFO - Input Statistics - Input Tokens: 8489, Input Price: 0.0212225
2025-08-02 18:40:47,680 - app.services.extractor - INFO - Output Statistics - Output Tokens: 524, Output Price: 0.00524
2025-08-02 18:40:47,680 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 18:40:47,680 - app.services.extractor - INFO - Total Statistics - Total Tokens: 10595, Total Price: 0.0264625
2025-08-02 18:40:47,680 - app.services.extractor - DEBUG - Generated text length: 1690 characters
2025-08-02 18:40:47,680 - app.services.extractor - DEBUG - LLM response: \n{\n  "name": "MkDocs Publisher",\n  "author": "DevRel Team",\n  "description": "A simple action to build an MkDocs site and push it to the gh-pages branch.",\n  "inputs": {\n    "python-version": {\n      "description": "The version of Python to set up for building.",\n      "required": false,\n      "default": "3.11"\n    },\n    "requirements-file": {\n      "description": "Path to the Python requirements file",\n      "required": true\n    },\n    "gh-token": {\n      "description": "GitHub token for deployment. Usually ${{ secrets.GITHUB_TOKEN }}.",\n      "required": true,\n      "deprecationMessage": "Prefer using GITHUB_TOKEN environment variable directly if permissions allow."\n    }\n  },\n  "outputs": {\n    "page-url": {\n      "description": "The URL of the deployed GitHub Pages site.",\n      "value": "${{ steps.deploy.outputs.page_url }}"\n    }\n  },\n  "runs": {\n    "using": "composite",\n    "steps": [\n      {\n        "uses": "actions/checkout@v4"\n      },\n      {\n        "id": "setup_python",\n        "uses": "actions/setup-python@v5",\n        "with": {\n          "python-version": "${{ inputs.python-version }}"\n        }\n      },\n      {\n        "name": "Install Python Packages",\n        "run": "pip install -r ${{ inputs.requirements-file }}",\n        "shell": "bash"\n      },\n      {\n        "run": "mkdocs build",\n        "shell": "bash"\n      },\n      {\n        "id": "deploy",\n        "uses": "peaceiris/actions-gh-pages@v3",\n        "if": "github.ref == 'refs/heads/main'",\n        "with": {\n          "github_token": "${{ inputs.gh-token }}",\n          "publish_dir": "./site"\n        }\n      }\n    ]\n  },\n  "branding": {\n    "color": "blue",\n    "icon": "book-open"\n  }\n}\n
2025-08-02 18:40:47,680 - app.services.extractor - DEBUG - Successfully parsed JSON: {'name': 'MkDocs Publisher', 'author': 'DevRel Team', 'description': 'A simple action to build an MkDocs site and push it to the gh-pages branch.', 'inputs': {'python-version': {'description': 'The version of Python to set up for building.', 'required': False, 'default': '3.11'}, 'requirements-file': {'description': 'Path to the Python requirements file', 'required': True}, 'gh-token': {'description': 'GitHub token for deployment. Usually ${{ secrets.GITHUB_TOKEN }}.', 'required': True, 'deprecationMessage': 'Prefer using GITHUB_TOKEN environment variable directly if permissions allow.'}}, 'outputs': {'page-url': {'description': 'The URL of the deployed GitHub Pages site.', 'value': '${{ steps.deploy.outputs.page_url }}'}}, 'runs': {'using': 'composite', 'steps': [{'uses': 'actions/checkout@v4'}, {'id': 'setup_python', 'uses': 'actions/setup-python@v5', 'with': {'python-version': '${{ inputs.python-version }}'}}, {'name': 'Install Python Packages', 'run': 'pip install -r ${{ inputs.requirements-file }}', 'shell': 'bash'}, {'run': 'mkdocs build', 'shell': 'bash'}, {'id': 'deploy', 'uses': 'peaceiris/actions-gh-pages@v3', 'if': "github.ref == 'refs/heads/main'", 'with': {'github_token': '${{ inputs.gh-token }}', 'publish_dir': './site'}}]}, 'branding': {'color': 'blue', 'icon': 'book-open'}}
2025-08-02 18:40:47,686 - app.services.extractor - INFO - Successfully extracted and validated JSON on attempt 1
2025-08-02 18:40:47,686 - app.services.extractor - INFO - Extraction completed: valid=True, attempts=1
2025-08-02 18:40:55,183 - app.services.extractor - INFO - ExtractorService.extract called
2025-08-02 18:40:55,183 - app.services.extractor - INFO - Starting JSON extraction with max_retries=3
2025-08-02 18:40:55,183 - app.services.extractor - DEBUG - Input text length: 618 characters
2025-08-02 18:40:55,184 - app.services.extractor - DEBUG - Schema: Citation File Format (CFF) v1.2.0
2025-08-02 18:40:55,184 - app.services.extractor - INFO - Extraction attempt 1/3
2025-08-02 18:40:55,184 - app.services.extractor - INFO - Sending request to Gemini (attempt 1)
2025-08-02 18:40:55,184 - app.services.extractor - DEBUG - Conversation history length: 1
2025-08-02 18:40:55,184 - app.services.extractor - DEBUG - Using model: gemini-2.5-pro
2025-08-02 18:41:36,015 - app.services.extractor - INFO - Input Statistics - Input Tokens: 15341, Input Price: 0.0383525
2025-08-02 18:41:36,015 - app.services.extractor - INFO - Output Statistics - Output Tokens: 883, Output Price: 0.00883
2025-08-02 18:41:36,015 - app.services.extractor - INFO - Thought Statistics - Thought Tokens: 0, Thought Price: 0.0
2025-08-02 18:41:36,015 - app.services.extractor - INFO - Total Statistics - Total Tokens: 19645, Total Price: 0.047182499999999995
2025-08-02 18:41:36,016 - app.services.extractor - DEBUG - Generated text length: 2457 characters
2025-08-02 18:41:36,016 - app.services.extractor - DEBUG - LLM response: \n{\n  "cff-version": "1.2.0",\n  "message": "If you use this software, please cite it using the metadata from this file.",\n  "title": "Attention is All you Need",\n  "authors": [\n    {\n      "given-names": "Ashish",\n      "family-names": "Vaswani"\n    },\n    {\n      "given-names": "Noam",\n      "family-names": "Shazeer"\n    },\n    {\n      "given-names": "Niki",\n      "family-names": "Parmar"\n    },\n    {\n      "given-names": "Jakob",\n      "family-names": "Uszkoreit"\n    },\n    {\n      "given-names": "Llion",\n      "family-names": "Jones"\n    },\n    {\n      "given-names": "Aidan N",\n      "family-names": "Gomez"\n    },\n    {\n      "given-names": "Łukasz",\n      "family-names": "Kaiser"\n    },\n    {\n      "given-names": "Illia",\n      "family-names": "Polosukhin"\n    }\n  ],\n  "preferred-citation": {\n    "type": "conference-paper",\n    "authors": [\n      {\n        "given-names": "Ashish",\n        "family-names": "Vaswani"\n      },\n      {\n        "given-names": "Noam",\n        "family-names": "Shazeer"\n      },\n      {\n        "given-names": "Niki",\n        "family-names": "Parmar"\n      },\n      {\n        "given-names": "Jakob",\n        "family-names": "Uszkoreit"\n      },\n      {\n        "given-names": "Llion",\n        "family-names": "Jones"\n      },\n      {\n        "given-names": "Aidan N",\n        "family-names": "Gomez"\n      },\n      {\n        "given-names": "Łukasz",\n        "family-names": "Kaiser"\n      },\n      {\n        "given-names": "Illia",\n        "family-names": "Polosukhin"\n      }\n    ],\n    "collection-title": "Advances in Neural Information Processing Systems",\n    "editors": [\n      {\n        "given-names": "I.",\n        "family-names": "Guyon"\n      },\n      {\n        "given-names": "U.",\n        "family-names": "Von Luxburg"\n      },\n      {\n        "given-names": "S.",\n        "family-names": "Bengio"\n      },\n      {\n        "given-names": "H.",\n        "family-names": "Wallach"\n      },\n      {\n        "given-names": "R.",\n        "family-names": "Fergus"\n      },\n      {\n        "given-names": "S.",\n        "family-names": "Vishwanathan"\n      },\n      {\n        "given-names": "R.",\n        "family-names": "Garnett"\n      }\n    ],\n    "publisher": {\n      "name": "Curran Associates, Inc."\n    },\n    "title": "Attention is All you Need",\n    "url": "https://proceedings.neurips.cc/paper_files/paper/2017/file/3f5ee243547dee91fbd053c1c4a845aa-Paper.pdf",\n    "volume": 30,\n    "year": 2017\n  }\n}\n
2025-08-02 18:41:36,016 - app.services.extractor - DEBUG - Successfully parsed JSON: {'cff-version': '1.2.0', 'message': 'If you use this software, please cite it using the metadata from this file.', 'title': 'Attention is All you Need', 'authors': [{'given-names': 'Ashish', 'family-names': 'Vaswani'}, {'given-names': 'Noam', 'family-names': 'Shazeer'}, {'given-names': 'Niki', 'family-names': 'Parmar'}, {'given-names': 'Jakob', 'family-names': 'Uszkoreit'}, {'given-names': 'Llion', 'family-names': 'Jones'}, {'given-names': 'Aidan N', 'family-names': 'Gomez'}, {'given-names': 'Łukasz', 'family-names': 'Kaiser'}, {'given-names': 'Illia', 'family-names': 'Polosukhin'}], 'preferred-citation': {'type': 'conference-paper', 'authors': [{'given-names': 'Ashish', 'family-names': 'Vaswani'}, {'given-names': 'Noam', 'family-names': 'Shazeer'}, {'given-names': 'Niki', 'family-names': 'Parmar'}, {'given-names': 'Jakob', 'family-names': 'Uszkoreit'}, {'given-names': 'Llion', 'family-names': 'Jones'}, {'given-names': 'Aidan N', 'family-names': 'Gomez'}, {'given-names': 'Łukasz', 'family-names': 'Kaiser'}, {'given-names': 'Illia', 'family-names': 'Polosukhin'}], 'collection-title': 'Advances in Neural Information Processing Systems', 'editors': [{'given-names': 'I.', 'family-names': 'Guyon'}, {'given-names': 'U.', 'family-names': 'Von Luxburg'}, {'given-names': 'S.', 'family-names': 'Bengio'}, {'given-names': 'H.', 'family-names': 'Wallach'}, {'given-names': 'R.', 'family-names': 'Fergus'}, {'given-names': 'S.', 'family-names': 'Vishwanathan'}, {'given-names': 'R.', 'family-names': 'Garnett'}], 'publisher': {'name': 'Curran Associates, Inc.'}, 'title': 'Attention is All you Need', 'url': 'https://proceedings.neurips.cc/paper_files/paper/2017/file/3f5ee243547dee91fbd053c1c4a845aa-Paper.pdf', 'volume': 30, 'year': 2017}}
2025-08-02 18:41:36,024 - app.services.extractor - INFO - Successfully extracted and validated JSON on attempt 1
2025-08-02 18:41:36,024 - app.services.extractor - INFO - Extraction completed: valid=True, attempts=1
2025-08-02 18:42:37,402 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 18:42:37,645 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 18:42:37,675 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 18:42:37,677 - app.services.extractor - INFO - Loaded 5 embeddings from file
2025-08-02 18:42:37,997 - app.services.extractor - INFO - Initializing ExtractorService
2025-08-02 18:42:38,304 - app.services.extractor - INFO - Initializing GeminiExtractor
2025-08-02 18:42:38,340 - app.services.extractor - INFO - Initializing AutoDetectAgent
2025-08-02 18:42:38,341 - app.services.extractor - INFO - Loaded 5 embeddings from file
2025-08-02 18:42:47,358 - app.services.extractor - INFO - Auto-detecting schema using embeddings for text with 5 available schemas
2025-08-02 18:42:47,902 - app.services.extractor - INFO - Top embedding match: citation-file (similarity: 0.4350)
2025-08-02 18:42:47,902 - app.services.extractor - INFO - Selected schema via embedding: citation-file
2025-08-02 18:42:55,189 - app.services.extractor - INFO - Auto-detecting schema using embeddings for text with 5 available schemas
2025-08-02 18:42:56,814 - app.services.extractor - INFO - Top embedding match: github-action (similarity: 0.6466)
2025-08-02 18:42:56,814 - app.services.extractor - INFO - Selected schema via embedding: github-action
